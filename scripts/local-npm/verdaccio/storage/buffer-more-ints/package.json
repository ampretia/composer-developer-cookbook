{
	"name": "buffer-more-ints",
	"versions": {
		"0.0.1": {
			"name": "buffer-more-ints",
			"version": "0.0.1",
			"author": {
				"name": "David Wragg",
				"email": "david@wragg.org"
			},
			"description": "Add support for more integer widths to Buffer",
			"homepage": "https://github.com/dpw/node-buffer-more-ints",
			"repository": {
				"type": "git",
				"url": "https://github.com/dpw/node-buffer-more-ints.git"
			},
			"main": "buffer-more-ints.js",
			"devDependencies": {
				"nodeunit": ""
			},
			"scripts": {
				"test": "node ./node_modules/nodeunit/bin/nodeunit buffer-more-ints-tests.js"
			},
			"_id": "buffer-more-ints@0.0.1",
			"dist": {
				"shasum": "be1f59ffd646ce148f6f5b8c8e223270af6912a5",
				"tarball": "https://registry.npmjs.org/buffer-more-ints/-/buffer-more-ints-0.0.1.tgz"
			},
			"_npmVersion": "1.1.61",
			"_npmUser": {
				"name": "dwragg",
				"email": "david@wragg.org"
			},
			"maintainers": [
				{
					"name": "dwragg",
					"email": "david@wragg.org"
				}
			],
			"directories": {}
		},
		"0.0.2": {
			"name": "buffer-more-ints",
			"version": "0.0.2",
			"author": {
				"name": "David Wragg",
				"email": "david@wragg.org"
			},
			"description": "Add support for more integer widths to Buffer",
			"homepage": "https://github.com/dpw/node-buffer-more-ints",
			"repository": {
				"type": "git",
				"url": "https://github.com/dpw/node-buffer-more-ints.git"
			},
			"main": "buffer-more-ints.js",
			"devDependencies": {
				"nodeunit": ""
			},
			"scripts": {
				"test": "node ./node_modules/nodeunit/bin/nodeunit buffer-more-ints-tests.js"
			},
			"readmeFilename": "README.md",
			"bugs": {
				"url": "https://github.com/dpw/node-buffer-more-ints/issues"
			},
			"_id": "buffer-more-ints@0.0.2",
			"dist": {
				"shasum": "26b3885d10fa13db7fc01aae3aab870199e0124c",
				"tarball": "https://registry.npmjs.org/buffer-more-ints/-/buffer-more-ints-0.0.2.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.3.11",
			"_npmUser": {
				"name": "dwragg",
				"email": "david@wragg.org"
			},
			"maintainers": [
				{
					"name": "dwragg",
					"email": "david@wragg.org"
				}
			],
			"directories": {}
		}
	},
	"dist-tags": {
		"latest": "0.0.2"
	},
	"time": {
		"modified": "2013-10-09T08:00:11.218Z",
		"created": "2012-09-24T20:59:59.754Z",
		"0.0.1": "2012-09-24T21:00:01.433Z",
		"0.0.2": "2013-10-09T08:00:11.218Z"
	},
	"_distfiles": {
		"buffer-more-ints-0.0.1.tgz": {
			"url": "https://registry.npmjs.org/buffer-more-ints/-/buffer-more-ints-0.0.1.tgz",
			"sha": "be1f59ffd646ce148f6f5b8c8e223270af6912a5",
			"registry": "npmjs"
		},
		"buffer-more-ints-0.0.2.tgz": {
			"url": "https://registry.npmjs.org/buffer-more-ints/-/buffer-more-ints-0.0.2.tgz",
			"sha": "26b3885d10fa13db7fc01aae3aab870199e0124c",
			"registry": "npmjs"
		}
	},
	"_attachments": {
		"buffer-more-ints-0.0.2.tgz": {
			"shasum": "26b3885d10fa13db7fc01aae3aab870199e0124c"
		}
	},
	"_uplinks": {
		"npmjs": {
			"etag": "\"52550d0b-23ce\"",
			"fetched": 1519912115726
		}
	},
	"_rev": "7-8bd3f298b8cc530d",
	"readme": "# buffer-more-ints: Add support for more integer widths to Buffer\n\nNode's Buffer only supports reading and writing integers of a limited\nrange of widths.  This module extends Buffer with support for more\nwidths, so that integers from 1 to 8 bytes (64 bits) can be accessed.\nThe functions provided follow the same naming conventions and take the\nsame arguments as the standard ones on Buffer:\n\n    $ node\n    > require('buffer-more-ints')\n    {}\n    > new Buffer(\"0000deadbeef0000\", \"hex\").readInt64BE(0).toString(16)\n    'deadbeef0000'\n\nbuffer-more-ints also adds functions `readIntBE`, `writeIntBE`, and\ntheir LE and UInt counterparts, which take an initial argument giving\nthe width of the integer in bytes:\n\n    > var b = new Buffer(3);\n    > b.writeIntLE(3, -123456, 0);\n    > b.toString('hex')\n    'c01dfe'\n    > b.readIntLE(3, 0);\n    -123456\n\nThe functions added by buffer-more-ints are all implemented in terms\nof the core Buffer functions.  Part way through writing the code, I\ndiscovered that node.js currently implements those in JavaScript, so\nthis doesn't lead to performance benefits.  But should node ever\nswitch to implementing its Buffer operations natively, this\nmodule should get a speed boost.\n\n## Limitations\n\nAs JavaScript uses IEEE754 doubles for numbers, the contiguous range\nof integers it can represent is [-2^53 - 1, 2^53 - 1].  So only\ninteger widths up to 6 bytes or 48 bits can be read exactly.  Reads of\n7 or 8 bytes (56 or 64 bits) will return the closest value that can be\nrepresented as a JavaScript number.\n\nIn certain situations it might be important to check that a JavaScript\nnumber was read exactly.  The `Buffer.isContiguousInt` function will\ndetermine this:\n\n    > Buffer.isContiguousInt(0x1fffffffffffff);\n    true\n    > Buffer.isContiguousInt(0x20000000000000);\n    false\n\nAnd `Buffer.assertContiguousInt` asserts that a number is so:\n\n    > Buffer.assertContiguousInt(0x1fffffffffffff);\n    undefined\n    > Buffer.assertContiguousInt(0x20000000000000);\n    AssertionError: number cannot be represented as a contiguous integer\n"
}