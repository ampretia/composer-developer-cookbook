{
	"name": "optjs",
	"versions": {
		"3.2.1-boom": {
			"name": "optjs",
			"description": "Probably the sole command line option parser you'll ever need to...",
			"version": "3.2.1-boom",
			"author": {
				"name": "Daniel Wirtz",
				"email": "dcode@dcode.io"
			},
			"repository": {
				"type": "git",
				"url": "https://github.com/dcodeIO/opt.js.git"
			},
			"main": "./opt.js",
			"license": "NASA-1.3",
			"_id": "optjs@3.2.1-boom",
			"dist": {
				"shasum": "bc0af6c8647db5eec511c4ca2d264f9646add758",
				"tarball": "https://registry.npmjs.org/optjs/-/optjs-3.2.1-boom.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.2.18",
			"_npmUser": {
				"name": "dcode",
				"email": "dcode@dcode.io"
			},
			"maintainers": [
				{
					"name": "dcode",
					"email": "dcode@dcode.io"
				}
			],
			"directories": {}
		},
		"3.2.2": {
			"name": "optjs",
			"description": "Probably the sole command line option parser you'll ever need to...",
			"version": "3.2.2",
			"author": {
				"name": "Daniel Wirtz",
				"email": "dcode@dcode.io"
			},
			"repository": {
				"type": "git",
				"url": "git+https://github.com/dcodeIO/opt.js.git"
			},
			"main": "./opt.js",
			"license": "MIT",
			"gitHead": "3316e52955256e0fde52c2fa8f00dd5eba665208",
			"bugs": {
				"url": "https://github.com/dcodeIO/opt.js/issues"
			},
			"homepage": "https://github.com/dcodeIO/opt.js#readme",
			"_id": "optjs@3.2.2",
			"scripts": {},
			"_shasum": "69a6ce89c442a44403141ad2f9b370bd5bb6f4ee",
			"_from": ".",
			"_npmVersion": "2.11.3",
			"_nodeVersion": "0.12.7",
			"_npmUser": {
				"name": "dcode",
				"email": "dcode@dcode.io"
			},
			"maintainers": [
				{
					"name": "dcode",
					"email": "dcode@dcode.io"
				}
			],
			"dist": {
				"shasum": "69a6ce89c442a44403141ad2f9b370bd5bb6f4ee",
				"tarball": "https://registry.npmjs.org/optjs/-/optjs-3.2.2.tgz"
			},
			"directories": {}
		}
	},
	"dist-tags": {
		"latest": "3.2.2"
	},
	"time": {
		"modified": "2016-01-11T15:16:17.788Z",
		"created": "2013-05-03T00:41:27.542Z",
		"3.2.1-boom": "2013-05-03T00:41:30.896Z",
		"3.2.2": "2016-01-11T15:16:17.788Z"
	},
	"_distfiles": {
		"optjs-3.2.1-boom.tgz": {
			"url": "https://registry.npmjs.org/optjs/-/optjs-3.2.1-boom.tgz",
			"sha": "bc0af6c8647db5eec511c4ca2d264f9646add758",
			"registry": "npmjs"
		},
		"optjs-3.2.2.tgz": {
			"url": "https://registry.npmjs.org/optjs/-/optjs-3.2.2.tgz",
			"sha": "69a6ce89c442a44403141ad2f9b370bd5bb6f4ee",
			"registry": "npmjs"
		}
	},
	"_attachments": {
		"optjs-3.2.2.tgz": {
			"shasum": "69a6ce89c442a44403141ad2f9b370bd5bb6f4ee"
		}
	},
	"_uplinks": {
		"npmjs": {
			"etag": "\"5693c741-e44\"",
			"fetched": 1519912119396
		}
	},
	"_rev": "7-e856fa28d3b2123d",
	"readme": "![opt.js](https://raw.github.com/dcodeIO/opt.js/master/opt.png)\r\n======\r\nProbably the sole command line option parser you'll ever need to <del>`npm install optjs`</del> Ctrl+C, Ctrl+V. Proof:\r\n\r\n```js\r\nfunction opt(argv) {\r\n    var opt={},arg,p;argv=Array.prototype.slice.call(argv||process.argv);for(var i=2;i<argv.length;i++)if(argv[i].charAt(0)=='-')\r\n    ((p=(arg=(\"\"+argv.splice(i--,1)).replace(/^[\\-]+/,'')).indexOf(\"=\"))>0?opt[arg.substring(0,p)]=arg.substring(p+1):opt[arg]=true);\r\n    return {'node':argv[0],'script':argv[1],'argv':argv.slice(2),'opt':opt};\r\n}\r\n```\r\n\r\nUsage\r\n-----\r\n```js\r\nvar opt = require(\"optjs\")();\r\nconsole.log(opt.node);   // Path to node executable\r\nconsole.log(opt.script); // Path to the current script\r\nconsole.log(opt.opt);    // Command line options as a hash\r\nconsole.log(opt.argv);   // Remaining non-option arguments\r\n```\r\n\r\nExample\r\n-------\r\n`node somescript.js foo -a=1 -b --c=\"hello world\" bar ----d`\r\n\r\n```js\r\n// Result\r\nopt.node   == \"/path/to/node[.exe]\"\r\nopt.script == \"/path/to/somescript.js\"\r\nopt.opt    == { a: 1, b: true, c: \"hello world\", d: true }\r\nopt.argv   == [\"foo\", \"bar\"]\r\n```\r\n\r\nFull-featured test suite\r\n------------------------\r\n```js\r\n#!/usr/bin/env node\r\nconsole.log(require(\"./opt.js\")());\r\n```\r\n\r\nLicense\r\n-------\r\nMIT\r\n"
}