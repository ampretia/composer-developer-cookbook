{
	"name": "jayson",
	"versions": {
		"1.0.1": {
			"name": "jayson",
			"version": "1.0.1",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": "https://github.com/tedeh/jayson/issues",
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*"
			},
			"_id": "jayson@1.0.1",
			"dist": {
				"shasum": "d317c4c1672c02dd77b5a3e6c441f9db5fb6a868",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.1.tgz"
			},
			"directories": {}
		},
		"1.0.2": {
			"name": "jayson",
			"version": "1.0.2",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": "https://github.com/tedeh/jayson/issues",
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*"
			},
			"_id": "jayson@1.0.2",
			"dist": {
				"shasum": "c24a7e4cec0359240340bbc1a7469ef78c7e9a02",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.2.tgz"
			},
			"directories": {}
		},
		"1.0.3": {
			"name": "jayson",
			"version": "1.0.3",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": "https://github.com/tedeh/jayson/issues",
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*"
			},
			"_id": "jayson@1.0.3",
			"dist": {
				"shasum": "e77ff98a08bdb2c209fe4a364cff458e4adc3f22",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.3.tgz"
			},
			"directories": {}
		},
		"1.0.4": {
			"name": "jayson",
			"version": "1.0.4",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": "https://github.com/tedeh/jayson/issues",
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.4",
			"dist": {
				"shasum": "bc4665f8937ade768cf8f3c875b3bada0617f5ff",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.4.tgz"
			},
			"_npmVersion": "1.1.69",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.0.5": {
			"name": "jayson",
			"version": "1.0.5",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": "https://github.com/tedeh/jayson/issues",
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.5",
			"dist": {
				"shasum": "0539ad2c33a49d02232256f16f50f915e7eb83df",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.5.tgz"
			},
			"_npmVersion": "1.1.69",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.0.6": {
			"name": "jayson",
			"version": "1.0.6",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": "https://github.com/tedeh/jayson/issues",
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.6",
			"dist": {
				"shasum": "069ab70619846433228c906bdaeea61df7994478",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.6.tgz"
			},
			"_npmVersion": "1.1.69",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.0.7": {
			"name": "jayson",
			"version": "1.0.7",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.7",
			"dist": {
				"shasum": "7fe8989ed001a8235dc1df2a3904fc5040fa5986",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.7.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.2.21",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.0.8": {
			"name": "jayson",
			"version": "1.0.8",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.8",
			"dist": {
				"shasum": "55ac60c2d1e68fd869a80e667aed03d083e2dbc4",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.8.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.2.24",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.0.9": {
			"name": "jayson",
			"version": "1.0.9",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu"
				}
			],
			"scripts": {
				"test": "make test",
				"blanket": {
					"pattern": "lib",
					"data-cover-never": "node_modules"
				}
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.9",
			"dist": {
				"shasum": "df7d17d3a512632d5d404fdb6546d1292ec7927a",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.9.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.2.32",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.0.10": {
			"name": "jayson",
			"version": "1.0.10",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test",
				"blanket": {
					"pattern": "lib",
					"data-cover-never": "node_modules"
				}
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.10",
			"dist": {
				"shasum": "103b5d58e7fff761b7c712f8cde9b097bf1e6241",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.10.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.2.32",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.0.11": {
			"name": "jayson",
			"version": "1.0.11",
			"description": "JSON-RPC 2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"cluster",
				"distributed",
				"relay"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"commander": "*",
				"eyes": "*"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.0.11",
			"dist": {
				"shasum": "6cb8a8bb2b392d638b7179274c39bb22104bad5a",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.0.11.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.3.5",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.1.1": {
			"name": "jayson",
			"version": "1.1.1",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"JSONStream": "0.8.0",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"underscore": "^1.6.0"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"_id": "jayson@1.1.1",
			"dist": {
				"shasum": "41ba1c49b6aa50cbb873ba3f511c94d42c56b825",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.1.1.tgz"
			},
			"_from": ".",
			"_npmVersion": "1.4.3",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"directories": {}
		},
		"1.1.2": {
			"name": "jayson",
			"version": "1.1.2",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"JSONStream": "0.8.0",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"underscore": "^1.6.0"
			},
			"devDependencies": {
				"should": "*",
				"mocha": "*",
				"connect": "*",
				"uglify-js": "*",
				"blanket": "*"
			},
			"gitHead": "abe2ccb3d50205c8a7e07d2c1930b577c4ba964f",
			"_id": "jayson@1.1.2",
			"_shasum": "0bcd90acf7208865134249fdeb12ea968768b2fa",
			"_from": ".",
			"_npmVersion": "2.1.6",
			"_nodeVersion": "0.10.33",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "0bcd90acf7208865134249fdeb12ea968768b2fa",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.1.2.tgz"
			},
			"directories": {}
		},
		"1.1.3": {
			"name": "jayson",
			"version": "1.1.3",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"jquery",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"dependencies": {
				"JSONStream": "0.8.0",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"underscore": "1.6.0"
			},
			"devDependencies": {
				"should": "3.3.1",
				"mocha": "1.18.2",
				"connect": "2.15.0",
				"uglify-js": "2.4.13",
				"blanket": "1.1.6",
				"pass-stream": "0.1.3"
			},
			"gitHead": "3ceb804e5f31cbb627956d5fd5b1642e7b1a24d4",
			"_id": "jayson@1.1.3",
			"_shasum": "07ecccf17acf4316222fab1c2f2797ef4a95c2c7",
			"_from": ".",
			"_npmVersion": "2.1.6",
			"_nodeVersion": "0.10.33",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "07ecccf17acf4316222fab1c2f2797ef4a95c2c7",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.1.3.tgz"
			},
			"directories": {}
		},
		"1.2.0": {
			"name": "jayson",
			"version": "1.2.0",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "0.8.0",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"lodash": "3.6.0"
			},
			"devDependencies": {
				"blanket": "1.1.6",
				"connect": "2.15.0",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "5.2.0",
				"uglify-js": "2.4.13"
			},
			"gitHead": "07a3498da37613ddf89c64ddcee82ad94487e483",
			"_id": "jayson@1.2.0",
			"_shasum": "a0bab03f1123930ec1d3d0663d6c8d3fd26763fe",
			"_from": ".",
			"_npmVersion": "2.1.17",
			"_nodeVersion": "1.2.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "a0bab03f1123930ec1d3d0663d6c8d3fd26763fe",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.2.0.tgz"
			},
			"directories": {}
		},
		"1.2.1": {
			"name": "jayson",
			"version": "1.2.1",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"jsonstream": "1.0.3",
				"lodash": "3.6.0"
			},
			"devDependencies": {
				"blanket": "1.1.6",
				"connect": "2.15.0",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "5.2.0",
				"uglify-js": "2.4.13"
			},
			"gitHead": "2292f22e9f4a23d2e3682579e02ffe09cf31c93d",
			"_id": "jayson@1.2.1",
			"_shasum": "da78484415c7663ddfe13939dbf25b0443a73ba5",
			"_from": ".",
			"_npmVersion": "3.1.3",
			"_nodeVersion": "2.5.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "da78484415c7663ddfe13939dbf25b0443a73ba5",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.2.1.tgz"
			},
			"directories": {}
		},
		"1.2.2": {
			"name": "jayson",
			"version": "1.2.2",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"license": "MIT",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"engines": {
				"node": ">= 0.4.0"
			},
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "1.0.3",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"lodash": "3.6.0"
			},
			"devDependencies": {
				"blanket": "1.1.6",
				"connect": "2.15.0",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "5.2.0",
				"uglify-js": "2.4.13"
			},
			"gitHead": "2c35053858829403d964d32bd34a0493d2788295",
			"_id": "jayson@1.2.2",
			"_shasum": "d28c602ecb8922c2a9fb3c1611f79fb584f193ec",
			"_from": ".",
			"_npmVersion": "3.1.3",
			"_nodeVersion": "2.5.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "d28c602ecb8922c2a9fb3c1611f79fb584f193ec",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-1.2.2.tgz"
			},
			"directories": {}
		},
		"2.0.0": {
			"name": "jayson",
			"version": "2.0.0",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"license": "MIT",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "make test"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "1.0.3",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"json-stringify-safe": "5.0.1",
				"lodash": "3.6.0",
				"es6-promisify": "3.0.0"
			},
			"devDependencies": {
				"blanket": "1.1.6",
				"connect": "2.15.0",
				"es6-promise": "3.0.2",
				"jshint": "2.9.1",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "8.2.1",
				"uglify-js": "2.4.13"
			},
			"gitHead": "0a25f874a8eeef72bf2f9c47b88905f382d6c537",
			"_id": "jayson@2.0.0",
			"_shasum": "7d3f107dea025c4c65af0ae9b143453c2cb8fc3a",
			"_from": ".",
			"_npmVersion": "3.3.12",
			"_nodeVersion": "5.3.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "7d3f107dea025c4c65af0ae9b143453c2cb8fc3a",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-2.0.0.tgz"
			},
			"_npmOperationalInternal": {
				"host": "packages-5-east.internal.npmjs.com",
				"tmp": "tmp/jayson-2.0.0.tgz_1454665842393_0.06008896022103727"
			},
			"directories": {}
		},
		"2.0.1": {
			"name": "jayson",
			"version": "2.0.1",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"license": "MIT",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "mocha",
				"test-ci": "mocha -w -R min",
				"coverage": "istanbul cover _mocha",
				"docs": "jsdoc -t node_modules/ink-docstrap/template -R README.md -c ./jsdoc.conf.json",
				"docs_clear": "rm -rf ./docs/jayson/*; exit 0",
				"docs_refresh": "npm run docs_clear && npm run docs",
				"docs_deploy": "rsync --delete -r docs/jayson/* oceandatorn:~/shared/nginx/domains/jayson.tedeh.net; exit 0",
				"lint": "jshint -c .jshintrc -c .jshintrc lib/*.js lib/**/*.js examples/**/*.js promise/*.js promise/**/*.js; exit 0"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "1.0.3",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"json-stringify-safe": "5.0.1",
				"lodash": "3.6.0",
				"es6-promisify": "3.0.0"
			},
			"devDependencies": {
				"connect": "2.15.0",
				"es6-promise": "3.0.2",
				"ink-docstrap": "1.1.4",
				"istanbul": "0.4.3",
				"jsdoc": "3.4.0",
				"jshint": "2.9.1",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "8.2.1",
				"uglify-js": "2.4.13"
			},
			"gitHead": "8e5f4c28ab28513613fa6acb2857af1baa2b8bd6",
			"_id": "jayson@2.0.1",
			"_shasum": "ecaced02d0976543b231a4d0d6e0da069264916c",
			"_from": ".",
			"_npmVersion": "3.7.3",
			"_nodeVersion": "5.9.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "ecaced02d0976543b231a4d0d6e0da069264916c",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-2.0.1.tgz"
			},
			"_npmOperationalInternal": {
				"host": "packages-16-east.internal.npmjs.com",
				"tmp": "tmp/jayson-2.0.1.tgz_1464000287506_0.4045931550208479"
			},
			"directories": {}
		},
		"2.0.2": {
			"name": "jayson",
			"version": "2.0.2",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"license": "MIT",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "mocha",
				"test-ci": "mocha -w -R min",
				"coverage": "istanbul cover _mocha",
				"docs": "jsdoc -t node_modules/ink-docstrap/template -R README.md -c ./jsdoc.conf.json",
				"docs_clear": "rm -rf ./docs/jayson/*; exit 0",
				"docs_refresh": "npm run docs_clear && npm run docs",
				"docs_deploy": "rsync --delete -r docs/jayson/* oceandatorn:~/shared/nginx/domains/jayson.tedeh.net; exit 0",
				"lint": "jshint -c .jshintrc -c .jshintrc lib/*.js lib/**/*.js examples/**/*.js promise/*.js promise/**/*.js; exit 0"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "1.0.3",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"json-stringify-safe": "5.0.1",
				"lodash": "3.6.0",
				"es6-promisify": "3.0.0"
			},
			"devDependencies": {
				"connect": "2.15.0",
				"es6-promise": "3.0.2",
				"ink-docstrap": "1.1.4",
				"istanbul": "0.4.3",
				"jsdoc": "3.4.0",
				"jshint": "2.9.1",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "8.2.1",
				"uglify-js": "2.4.13"
			},
			"gitHead": "3f3ee3f83df8cca58054d8e1ec2d28b618d9944e",
			"_id": "jayson@2.0.2",
			"_shasum": "38e2e132ee48795e61f1255a53cb3f10bfb2394b",
			"_from": ".",
			"_npmVersion": "3.7.3",
			"_nodeVersion": "5.9.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "38e2e132ee48795e61f1255a53cb3f10bfb2394b",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-2.0.2.tgz"
			},
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/jayson-2.0.2.tgz_1469438474762_0.6638975879177451"
			},
			"directories": {}
		},
		"2.0.3": {
			"name": "jayson",
			"version": "2.0.3",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"license": "MIT",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "mocha",
				"test-ci": "mocha -w -R min",
				"coverage": "istanbul cover _mocha",
				"docs": "jsdoc -t node_modules/ink-docstrap/template -R README.md -c ./jsdoc.conf.json",
				"docs_clear": "rm -rf ./docs/jayson/*; exit 0",
				"docs_refresh": "npm run docs_clear && npm run docs",
				"docs_deploy": "rsync --delete -r docs/jayson/* oceandatorn:~/shared/nginx/domains/jayson.tedeh.net; exit 0",
				"lint": "jshint -c .jshintrc -c .jshintrc lib/*.js lib/**/*.js examples/**/*.js promise/*.js promise/**/*.js; exit 0"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "1.0.3",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"json-stringify-safe": "5.0.1",
				"lodash": "3.6.0",
				"es6-promisify": "3.0.0"
			},
			"devDependencies": {
				"connect": "2.15.0",
				"es6-promise": "3.0.2",
				"ink-docstrap": "1.1.4",
				"istanbul": "0.4.3",
				"jsdoc": "3.4.0",
				"jshint": "2.9.1",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "8.2.1",
				"uglify-js": "2.4.13"
			},
			"gitHead": "a8ab43f0a94e631e015870b3147130f840be953f",
			"_id": "jayson@2.0.3",
			"_shasum": "dd750b74ea3341f3a98f875b41a35caf1d4949ed",
			"_from": ".",
			"_npmVersion": "3.10.7",
			"_nodeVersion": "6.6.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"shasum": "dd750b74ea3341f3a98f875b41a35caf1d4949ed",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-2.0.3.tgz"
			},
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/jayson-2.0.3.tgz_1487682755117_0.16825318918563426"
			},
			"directories": {}
		},
		"2.0.4": {
			"name": "jayson",
			"version": "2.0.4",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"license": "MIT",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "mocha",
				"test-ci": "mocha -w -R min",
				"coverage": "istanbul cover _mocha",
				"docs": "jsdoc -t node_modules/ink-docstrap/template -R README.md -c ./jsdoc.conf.json",
				"docs_clear": "rm -rf ./docs/jayson/*; exit 0",
				"docs_refresh": "npm run docs_clear && npm run docs",
				"docs_deploy": "rsync --delete -r docs/jayson/* tedeh:/var/www/jayson; exit 0",
				"lint": "jshint lib/*.js lib/**/*.js promise/*.js promise/**/*.js; exit 0"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "1.0.3",
				"commander": "1.3.2",
				"eyes": "0.1.8",
				"json-stringify-safe": "5.0.1",
				"lodash": "3.6.0",
				"es6-promisify": "3.0.0"
			},
			"devDependencies": {
				"connect": "2.15.0",
				"es6-promise": "3.0.2",
				"ink-docstrap": "1.1.4",
				"istanbul": "0.4.3",
				"jsdoc": "3.4.0",
				"jshint": "2.9.1",
				"mocha": "2.1.0",
				"pass-stream": "0.1.3",
				"should": "8.2.1",
				"uglify-js": "2.4.13"
			},
			"gitHead": "78149f63eb5744417ead1f737095af165c6dff15",
			"_id": "jayson@2.0.4",
			"_npmVersion": "5.3.0",
			"_nodeVersion": "8.3.0",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"integrity": "sha512-2vnYM40LXRZxA42YhUGQxlufG0x6X2I3kDYXFUETLvYh27JAcMFEHcoc/UWA/xyAUgWQAddHTzWH78F2z+7LXA==",
				"shasum": "c20122d8d2d0512d41635db4bcf3785bbe4ff685",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-2.0.4.tgz"
			},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jayson-2.0.4.tgz_1504075556859_0.009730817284435034"
			},
			"directories": {}
		},
		"2.0.5": {
			"name": "jayson",
			"version": "2.0.5",
			"description": "JSON-RPC 1.0/2.0 compliant server and client",
			"license": "MIT",
			"keywords": [
				"jsonrpc",
				"json-rpc",
				"rpc",
				"json",
				"jsonrpc-2.0",
				"jsonrpc-1.0",
				"middleware",
				"connect",
				"express",
				"fork",
				"distributed",
				"relay",
				"http",
				"tcp",
				"https",
				"tls",
				"api"
			],
			"author": {
				"name": "Tedde Lundgren",
				"email": "mail@tedeh.net",
				"url": "http://tedeh.net"
			},
			"maintainers": [
				{
					"name": "tedeh",
					"email": "mail@tedeh.net"
				}
			],
			"bin": {
				"jayson": "./bin/jayson.js"
			},
			"repository": {
				"type": "git",
				"url": "git://github.com/tedeh/jayson.git"
			},
			"homepage": "http://jayson.tedeh.net",
			"bugs": {
				"url": "https://github.com/tedeh/jayson/issues"
			},
			"main": "index",
			"contributors": [
				{
					"name": "Tedde Lundgren",
					"email": "mail@tedeh.net",
					"url": "http://tedeh.net"
				},
				{
					"name": "Daniel Vicory",
					"email": "dvicory@gmail.com",
					"url": "http://bzfx.net"
				},
				{
					"name": "Jonathan Liu",
					"email": "net147@gmail.com"
				}
			],
			"scripts": {
				"test": "mocha",
				"test-ci": "mocha -w -R min",
				"coverage": "istanbul cover _mocha",
				"docs": "jsdoc -t node_modules/ink-docstrap/template -R README.md -c ./jsdoc.conf.json",
				"docs_clear": "rm -rf ./docs/jayson/*; exit 0",
				"docs_refresh": "npm run docs_clear && npm run docs",
				"docs_deploy": "rsync --delete -r docs/jayson/* tedeh:/var/www/jayson; exit 0",
				"lint": "jshint lib/*.js lib/**/*.js promise/*.js promise/**/*.js; exit 0"
			},
			"config": {
				"blanket": {
					"pattern": "lib",
					"data-cover-never": [
						"node_modules",
						"public"
					],
					"data-cover-reporter-options": {
						"shortnames": false
					}
				}
			},
			"dependencies": {
				"JSONStream": "^1.3.1",
				"commander": "^2.12.2",
				"es6-promisify": "^5.0.0",
				"eyes": "^0.1.8",
				"json-stringify-safe": "^5.0.1",
				"lodash": "^4.17.4"
			},
			"devDependencies": {
				"body-parser": "^1.18.2",
				"connect": "^3.6.5",
				"es6-promise": "^4.1.1",
				"ink-docstrap": "^1.3.2",
				"istanbul": "^0.4.5",
				"jsdoc": "^3.5.5",
				"jshint": "2.9.1",
				"mocha": "^4.0.1",
				"pass-stream": "^1.0.0",
				"should": "^13.1.3"
			},
			"gitHead": "ad30614851d8ec4a3b685b018da0eece9b20a3d5",
			"_id": "jayson@2.0.5",
			"_npmVersion": "5.5.1",
			"_nodeVersion": "8.9.1",
			"_npmUser": {
				"name": "tedeh",
				"email": "mail@tedeh.net"
			},
			"dist": {
				"integrity": "sha512-ktzv96vpLjO0OXxHnlxyw9CIolAWau3InwdFnEfb4ctTD40HeEiLjIJbe3GGMmh3gwN2PjGAzPJuaAPmi8KYpw==",
				"shasum": "46df3f0bceb0b5b708bf7c8806c34c81938d3f21",
				"tarball": "https://registry.npmjs.org/jayson/-/jayson-2.0.5.tgz"
			},
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/jayson-2.0.5.tgz_1512386650184_0.7138447018805891"
			},
			"directories": {}
		}
	},
	"dist-tags": {
		"latest": "2.0.5"
	},
	"time": {
		"modified": "2018-02-20T17:42:22.468Z",
		"created": "2012-07-02T10:20:04.215Z",
		"1.0.1": "2012-07-02T10:20:06.649Z",
		"1.0.2": "2012-08-18T12:27:31.914Z",
		"1.0.3": "2012-09-21T09:13:50.532Z",
		"1.0.4": "2012-12-30T13:17:49.379Z",
		"1.0.5": "2012-12-30T15:57:00.536Z",
		"1.0.6": "2013-01-08T18:14:43.659Z",
		"1.0.7": "2013-05-30T20:04:27.893Z",
		"1.0.8": "2013-06-23T11:35:57.125Z",
		"1.0.9": "2013-07-14T15:00:52.790Z",
		"1.0.10": "2013-07-24T13:42:50.867Z",
		"1.0.11": "2013-08-10T11:49:49.689Z",
		"1.1.0": "2014-05-10T09:49:47.281Z",
		"1.1.1": "2014-05-10T10:13:17.586Z",
		"1.1.2": "2014-11-10T15:12:19.666Z",
		"1.1.3": "2015-01-02T12:37:32.346Z",
		"1.2.0": "2015-04-05T08:46:02.202Z",
		"1.2.1": "2015-08-28T20:02:27.461Z",
		"1.2.2": "2015-11-21T06:33:16.694Z",
		"2.0.0": "2016-02-05T09:50:43.369Z",
		"2.0.1": "2016-05-23T10:44:48.710Z",
		"2.0.2": "2016-07-25T09:21:16.745Z",
		"2.0.3": "2017-02-21T13:12:37.064Z",
		"2.0.4": "2017-08-30T06:45:57.471Z",
		"2.0.5": "2017-12-04T11:24:10.488Z"
	},
	"_distfiles": {
		"jayson-1.0.1.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.1.tgz",
			"sha": "d317c4c1672c02dd77b5a3e6c441f9db5fb6a868",
			"registry": "npmjs"
		},
		"jayson-1.0.2.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.2.tgz",
			"sha": "c24a7e4cec0359240340bbc1a7469ef78c7e9a02",
			"registry": "npmjs"
		},
		"jayson-1.0.3.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.3.tgz",
			"sha": "e77ff98a08bdb2c209fe4a364cff458e4adc3f22",
			"registry": "npmjs"
		},
		"jayson-1.0.4.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.4.tgz",
			"sha": "bc4665f8937ade768cf8f3c875b3bada0617f5ff",
			"registry": "npmjs"
		},
		"jayson-1.0.5.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.5.tgz",
			"sha": "0539ad2c33a49d02232256f16f50f915e7eb83df",
			"registry": "npmjs"
		},
		"jayson-1.0.6.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.6.tgz",
			"sha": "069ab70619846433228c906bdaeea61df7994478",
			"registry": "npmjs"
		},
		"jayson-1.0.7.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.7.tgz",
			"sha": "7fe8989ed001a8235dc1df2a3904fc5040fa5986",
			"registry": "npmjs"
		},
		"jayson-1.0.8.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.8.tgz",
			"sha": "55ac60c2d1e68fd869a80e667aed03d083e2dbc4",
			"registry": "npmjs"
		},
		"jayson-1.0.9.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.9.tgz",
			"sha": "df7d17d3a512632d5d404fdb6546d1292ec7927a",
			"registry": "npmjs"
		},
		"jayson-1.0.10.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.10.tgz",
			"sha": "103b5d58e7fff761b7c712f8cde9b097bf1e6241",
			"registry": "npmjs"
		},
		"jayson-1.0.11.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.0.11.tgz",
			"sha": "6cb8a8bb2b392d638b7179274c39bb22104bad5a",
			"registry": "npmjs"
		},
		"jayson-1.1.1.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.1.1.tgz",
			"sha": "41ba1c49b6aa50cbb873ba3f511c94d42c56b825",
			"registry": "npmjs"
		},
		"jayson-1.1.2.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.1.2.tgz",
			"sha": "0bcd90acf7208865134249fdeb12ea968768b2fa",
			"registry": "npmjs"
		},
		"jayson-1.1.3.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.1.3.tgz",
			"sha": "07ecccf17acf4316222fab1c2f2797ef4a95c2c7",
			"registry": "npmjs"
		},
		"jayson-1.2.0.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.2.0.tgz",
			"sha": "a0bab03f1123930ec1d3d0663d6c8d3fd26763fe",
			"registry": "npmjs"
		},
		"jayson-1.2.1.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.2.1.tgz",
			"sha": "da78484415c7663ddfe13939dbf25b0443a73ba5",
			"registry": "npmjs"
		},
		"jayson-1.2.2.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-1.2.2.tgz",
			"sha": "d28c602ecb8922c2a9fb3c1611f79fb584f193ec",
			"registry": "npmjs"
		},
		"jayson-2.0.0.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-2.0.0.tgz",
			"sha": "7d3f107dea025c4c65af0ae9b143453c2cb8fc3a",
			"registry": "npmjs"
		},
		"jayson-2.0.1.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-2.0.1.tgz",
			"sha": "ecaced02d0976543b231a4d0d6e0da069264916c",
			"registry": "npmjs"
		},
		"jayson-2.0.2.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-2.0.2.tgz",
			"sha": "38e2e132ee48795e61f1255a53cb3f10bfb2394b",
			"registry": "npmjs"
		},
		"jayson-2.0.3.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-2.0.3.tgz",
			"sha": "dd750b74ea3341f3a98f875b41a35caf1d4949ed",
			"registry": "npmjs"
		},
		"jayson-2.0.4.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-2.0.4.tgz",
			"sha": "c20122d8d2d0512d41635db4bcf3785bbe4ff685",
			"registry": "npmjs"
		},
		"jayson-2.0.5.tgz": {
			"url": "https://registry.npmjs.org/jayson/-/jayson-2.0.5.tgz",
			"sha": "46df3f0bceb0b5b708bf7c8806c34c81938d3f21",
			"registry": "npmjs"
		}
	},
	"_attachments": {},
	"_uplinks": {
		"npmjs": {
			"etag": "\"5a8c5dfe-128e5\"",
			"fetched": 1519837516510
		}
	},
	"_rev": "1-34c9b9e47e8f9ba1",
	"readme": "# Jayson\n\nJayson is a [JSON-RPC 2.0][jsonrpc-spec] and [1.0][jsonrpc1-spec] compliant server and client written in JavaScript for [node.js][node.js] that aims to be as simple as possible to use.\n\n[jsonrpc-spec]: http://jsonrpc.org/spec.html \n[jsonrpc1-spec]: http://json-rpc.org/wiki/specification\n[node.js]: http://nodejs.org/\n[jayson-npm]: https://www.npmjs.com/package/jayson\n[jayson-travis]: https://travis-ci.org/tedeh/jayson\n[badge-travis]: https://img.shields.io/travis/tedeh/jayson/master.svg?style=flat-square\n[badge-npm]: https://img.shields.io/npm/v/jayson.svg?style=flat-square\n[badge-downloads-month]: https://img.shields.io/npm/dm/jayson.svg?style=flat-square\n\n[![travis build status][badge-travis]][jayson-travis] \n[![npm version][badge-npm]][jayson-npm]\n[![npm][badge-downloads-month]][jayson-npm]\n\n## Table of contents\n\n- [Features](#features)\n- [Example](#example)\n- [Installation](#installation)\n- [Changelog](#changelog-only-notable-milestones)\n- [Requirements](#requirements)\n- [Class Documentation](#class-documentation)\n- [Running tests](#running-tests)\n- [Usage](#usage)\n  - [Client](#client)\n     - [Interface description](#client-interface-description)\n     - [Notifications](#notifications)\n     - [Batches](#batches)\n     - [Callback syntactic sugar](#client-callback-syntactic-sugar)\n     - [Events](#client-events)\n  - [Server](#server)\n     - [Interface description](#server-interface-description)\n     - [Many interfaces at the same time](#many-interfaces-at-the-same-time)\n     - [Using the server as a relay](#using-the-server-as-a-relay)\n     - [Method routing](#method-routing)\n     - [Method definition](#method-definition)\n     - [Events](#server-events)\n     - [Errors](#server-errors)\n     - [CORS](#server-cors)\n- [Revivers and replacers](#revivers-and-replacers)\n- [Named parameters](#named-parameters)\n- [Promises](#promises)\n  - [Batches](#promise-batches)\n- [Contributing](#contributing)\n\n## Features\n\n* [Servers that can listen to several interfaces at the same time](#many-interfaces-at-the-same-time)\n* Supports both HTTP and TCP client and server connections\n* [Server-side method routing](#method-routing)\n* [Relaying of requests to other servers](#using-the-server-as-a-relay)\n* [JSON reviving and replacing for transparent serialization of complex objects](#revivers-and-replacers)\n* [CLI client](#cli-client)\n* [Promises](#promises)\n* Fully tested to comply with the [official JSON-RPC 2.0 specification][jsonrpc-spec]\n* Also supports [JSON-RPC 1.0][jsonrpc1-spec]\n\n## Example\n\nA basic JSON-RPC 2.0 server via HTTP:\n\nServer example in [examples/simple_example/server.js](examples/simple_example/server.js):\n\n```javascript\nvar jayson = require('jayson');\n\n// create a server\nvar server = jayson.server({\n  add: function(args, callback) {\n    callback(null, args[0] + args[1]);\n  }\n});\n\nserver.http().listen(3000);\n```\n\nClient example in [examples/simple_example/client.js](examples/simple_example/client.js) invoking `add` on the above server:\n\n```javascript\nvar jayson = require('jayson');\n\n// create a client\nvar client = jayson.client.http({\n  port: 3000\n});\n\n// invoke \"add\"\nclient.request('add', [1, 1], function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // 2\n});\n```\n\n## Installation\n\nInstall the latest version of _jayson_ from [npm](https://github.com/isaacs/npm) by executing `npm install jayson` in your shell. Do a global install with `npm install --global jayson` if you want the `jayson` client CLI in your PATH.\n\n## Changelog (only notable milestones)\n\n- *2.0.0*\n  - Added [support for promises](#promises)\n  - _Breaking_: `collect: true` is now the default option for a new `jayson.Server` and `jayson.Method`\n- *1.2.0*\n  - Greatly improved [server method definition](#method-definition)\n- *1.1.1*\n  - More http server events\n  - Remove fork server and client\n  - Add server routing\n- *1.0.11*\n  Add support for a HTTPS client\n- *1.0.9*\n  Add support for TCP servers and clients\n\n### CLI client\n\nThere is a CLI client in `bin/jayson.js` and it should be available as `jayson` in your shell if you installed the package globally. Run `jayson --help` to see how it works.\n\n## Requirements\n\nJayson does not have any special dependencies that cannot be resolved with a simple `npm install`. It is being [continuously tested][jayson-travis] using [travis-ci](https://travis-ci.org/) on the following versions/releases:\n\n- \"node\"\n- \"iojs\"\n- \"4\"\n- \"5\"\n- \"6\"\n- \"0.12\"\n\n## Class documentation\n\nIn addition to this document, a comprehensive class documentation made with [jsdoc][jsdoc-spec] is available at [jayson.tedeh.net](http://jayson.tedeh.net).\n\n[jsdoc-spec]: http://usejsdoc.org/\n\n## Running tests\n\n- Change directory to the repository root\n- Install the development packages by executing `npm install --dev`\n- Run the tests with `npm run test`\n\n## Usage\n\n### Client\n\nThe client is available as the `Client` or `client` property of `require('jayson')`.\n\n#### Client interface description\n\n| Name            | Description     |\n| --------------- | --------------- |\n| `Client`        | Base class      |\n| `Client.tcp`    | TCP interface   |\n| `Client.tls`    | TLS interface   |\n| `Client.http`   | HTTP interface  |\n| `Client.https`  | HTTPS interface |\n\nEvery client supports these options:\n\n| Option      \t| Default                            \t| Type       \t| Description                                              \t|\n|-------------\t|------------------------------------\t|------------\t|----------------------------------------------------------\t|\n| `reviver`   \t| `undefined`                        \t| `Function` \t| `JSON.parse` reviver                                    \t|\n| `replacer`  \t| `undefined`                        \t| `Function` \t| `JSON.stringify` replacer                               \t|\n| `generator` \t| [RFC4122][rfc_4122_spec] generator \t| `Function` \t| Generates a `String` for request ID.                     \t|\n| `version`   \t| 2                                  \t| `Number`   \t| JSON-RPC version to support (1 or 2)                      |\n\n[rfc_4122_spec]: http://www.ietf.org/rfc/rfc4122.txt\n\n##### Client.http\n\nUses the same options as [http.request][nodejs_docs_http_request] in addition to these options:\n\n| Option     \t| Default \t| Type     \t| Description                    \t|\n|------------\t|---------\t|----------\t|--------------------------------\t|\n| `encoding` \t| `utf8`  \t| `String` \t| Determines the encoding to use \t|\n\n###### Client.http Events\n\nThe HTTP server will emit the following events:\n\n| Event           \t| When                              \t| Arguments                                                                 \t| Notes                                     \t|\n|-----------------\t|-----------------------------------\t|---------------------------------------------------------------------------\t|-------------------------------------------\t|\n| `http request`  \t| Created an HTTP request           \t| 1. Instance of `http.ClientRequest`                                       \t|                                           \t|\n| `http response` \t| Received an HTTP response         \t| 1. Instance of `http.IncomingMessage` 2. Instance of `http.ClientRequest` \t|                                           \t|\n| `http error`    \t| Underlying stream emits `error`   \t| 1. Error                                                                  \t|                                           \t|\n| `http timeout`  \t| Underlying stream emits `timeout` \t|                                                                           \t| Automatically causes the request to abort \t|\n\nIt is possible to pass a string URL as the first argument. The URL will be run through [url.parse][nodejs_docs_url_parse]. Example:\n\n```javascript\nvar jayson = require('jayson');\nvar client = jayson.client.http('http://localhost:3000');\n// client.options is now the result of url.parse\n```\n\n[nodejs_docs_http_request]: http://nodejs.org/docs/latest/api/http.html#http_http_request_options_callback\n[nodejs_docs_url_parse]: http://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost\n\n##### Client.https\n\nUses the same options as [https.request][nodejs_docs_https_request] in addition _to the same options as `Client.http`_. This means it is also possible\nto pass a string URL as the first argument and have it interpreted by [url.parse][nodejs_docs_url_parse].\n\nWill emit the [same custom events](#clienthttp-events) as `Client.http`.\n\n[nodejs_docs_https_request]: http://nodejs.org/api/all.html#all_https_request_options_callback\n\n##### Client.tcp\n\nUses the same options as [net.connect][nodejs_docs_net_connect] in addition _to the same options as `Client.http`_.\n\n[nodejs_docs_net_connect]: https://nodejs.org/api/net.html#net_net_connect\n\n##### Client.tls\n\nUses the same options as [tls.connect][nodejs_docs_tls_connect] in addition _to the same options as `Client.http`_.\n\n[nodejs_docs_tls_connect]: https://nodejs.org/api/tls.html#tls_tls_connect_options_callback\n\n#### Notifications\n\nNotification requests are for cases where the reply from the server is not important and should be ignored. This is accomplished by setting the `id` property of a request object to `null`.\n\nClient example in [examples/notifications/client.js](examples/notifications/client.js) doing a notification request:\n\n```javascript\nvar jayson = require('jayson');\n\nvar client = jayson.client.http({\n  port: 3000\n});\n\n// the third parameter is set to \"null\" to indicate a notification\nclient.request('ping', [], null, function(err) {\n  if(err) throw err;\n  console.log('ok'); // request was received successfully\n});\n```\n\nServer example in [examples/notifications/server.js](examples/notifications/server.js):\n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server({\n  ping: function(args, callback) {\n    // do something, do nothing\n    callback();\n  }\n});\n\nserver.http().listen(3000);\n```\n\n##### Notes\n\n* Any value that the server returns will be discarded when doing a notification request.\n* Omitting the third argument `null` to `Client.prototype.request` does not generate a notification request. This argument has to be set explicitly to `null` for this to happen.\n* Network errors and the like will still reach the callback. When the callback is invoked (with or without error) one can be certain that the server has received the request.\n* See the [Official JSON-RPC 2.0 Specification][jsonrpc-spec] for additional information on how Jayson handles notifications that are erroneous.\n\n#### Batches\n\nA batch request is an array of individual requests that are sent to the server as one. Doing a batch request is very simple in Jayson and consists of constructing an array of individual requests (created by not passing a callback to `Client.prototype.request`) that is then itself passed to `Client.prototype.request`. \n\nCombined server/client example in [examples/batch_request/index.js](examples/batch_request/index.js):\n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server({\n  add: function(args, callback) {\n    callback(null, args[0] + args[1]);\n  }\n});\n\nvar client = jayson.client(server);\n\nvar batch = [\n  client.request('does_not_exist', [10, 5]),\n  client.request('add', [1, 1]),\n  client.request('add', [0, 0], null) // a notification\n];\n\nclient.request(batch, function(err, errors, successes) {\n  if(err) throw err;\n  console.log('errors', errors); // array of requests that errored\n  console.log('successes', successes); // array of requests that succeeded\n});\n\nclient.request(batch, function(err, responses) {\n  if(err) throw err;\n  console.log('responses', responses); // all responses together\n});\n```\n\n##### Notes\n\n* See the [Official JSON-RPC 2.0 Specification][jsonrpc-spec] for additional information on how Jayson handles different types of batches, mainly with regards to notifications, request errors and so forth.\n* There is no guarantee that the results will be in the same order as request Array `request`. To find the right result, compare the ID from the request with the ID in the result yourself.\n\n#### Client callback syntactic sugar\n\nWhen the length (number of arguments) of a client callback function is either 2 or 3 it receives slightly different values when invoked.\n\n* 2 arguments: first argument is an error or `null`, second argument is the response object as returned (containing _either_ a `result` or a `error` property) or `null` for notifications.\n* 3 arguments: first argument is an error or null, second argument is a JSON-RPC `error` property or `null` (if success), third argument is a JSON-RPC `result` property or `null` (if error).\n\nWhen doing a batch request with a 3-length callback, the second argument will be an array of requests with a `error` property and the third argument will be an array of requests with a `result` property.\n\n#### Client events\n\nA client will emit the following events (in addition to any special ones emitted by a specific interface):\n\n| Event      \t| When                        \t| Arguments                                     \t| Notes \t|\n|------------\t|-----------------------------\t|-----------------------------------------------\t|-------\t|\n| `request`  \t| About to dispatch a request \t| 1: Request object                             \t|       \t|\n| `response` \t| Received a response         \t| 1: Request object 2: Response object received \t|       \t|\n\n### Server\n\nThe server classes are available as the `Server` or `server` property of `require('jayson')`.\n\nThe server also sports several interfaces that can be accessed as properties of an instance of `Server`.\n\n#### Server interface description\n\n| Name                \t| Description                                                                                \t|\n|---------------------\t|--------------------------------------------------------------------------------------------\t|\n| `Server`            \t| Base interface for a server that supports receiving JSON-RPC requests                      \t|\n| `Server.tcp`        \t| TCP server that inherits from [net.Server][nodejs_doc_net_server]                          \t|\n| `Server.tls`        \t| TLS server that inherits from [tls.Server][nodejs_doc_tls_server]                          \t|\n| `Server.http`       \t| HTTP server that inherits from [http.Server][nodejs_doc_http_server]                       \t|\n| `Server.https`      \t| HTTPS server that inherits from [https.Server][nodejs_doc_https_server]                    \t|\n| `Server.middleware` \t| Method that returns a [Connect][connect]/[Express][express] compatible middleware function \t|\n\n[nodejs_doc_net_server]: http://nodejs.org/docs/latest/api/net.html#net_class_net_server\n[nodejs_doc_http_server]: http://nodejs.org/docs/latest/api/http.html#http_class_http_server\n[nodejs_doc_https_server]: http://nodejs.org/docs/latest/api/https.html#https_class_https_server\n[nodejs_doc_tls_server]: https://nodejs.org/api/tls.html#tls_class_tls_server\n[connect]: http://www.senchalabs.org/connect/\n[express]: http://expressjs.com/\n\nServers supports these options:\n\n| Option              \t| Default         \t| Type                \t| Description                                               \t|\n|---------------------\t|-----------------\t|---------------------\t|-----------------------------------------------------------\t|\n| `reviver`           \t| `null`          \t| `Function`          \t| `JSON.parse` reviver                                      \t|\n| `replacer`          \t| `null `         \t| `Function`          \t| `JSON.stringify` replacer                                 \t|\n| `router`            \t| `null `         \t| `Function`          \t| Return the function for [method routing](#method-routing) \t|\n| `collect`           \t| `true`          \t| `Boolean`           \t| Passed to `methodConstructor` options                     \t|\n| `params`            \t| `undefined`     \t| `Array|Object|null` \t| Passed to `methodConstructor` options                     \t|\n| `methodConstructor` \t| `jayson.Method` \t| `Function`          \t| Server functions are made an instance of this class       \t|\n| `version`           \t| 2               \t| `Number`            \t| JSON-RPC version to support (1 or 2)                      \t|\n\n##### Server.tcp\n\nUses the same options as the base class. Inherits from [net.Server][nodejs_doc_net_server].\n\n##### Server.tls\n\nUses the same options as the base class. Inherits from [tls.Server][nodejs_doc_tls_server].\n\n##### Server.http\n\nUses the same options as the base class. Inherits from [http.Server][nodejs_doc_http_server].\n\n###### Server.http Events\n\n| Event           \t| When                          \t| Arguments                                                                    \t| Notes \t|\n|-----------------\t|-------------------------------\t|------------------------------------------------------------------------------\t|-------\t|\n| `http request`  \t| Incoming HTTP request         \t| 1. Instance of `http.IncomingMessage`                                        \t|       \t|\n| `http response` \t| About to send a HTTP response \t| 1. Instance of `http.ServerResponse` 2. Instance of `http. IncomingMessage ` \t|       \t|\n\n##### Server.https\n\nUses the same options as the base class. Inherits from [https.Server][nodejs_doc_https_server] and `jayson.Server.http`. For information on how to configure certificates, [see the documentation on https.Server][nodejs_doc_https_server].\n\nWill emit the [same custom events](#serverhttp-events) as `Server.http`.\n\n##### Server.middleware\n\nUses the same options as the base class. Returns a function that is compatible with [Connect][connect] or [Express][express]. Will expect the request to be `req.body`, meaning that the request body must be parsed (typically using `connect.bodyParser`) before the middleware is invoked.\n\nThe middleware supports the following options:\n\n| Option \t| Default \t| Type      \t| Description                                                                               \t|\n|--------\t|---------\t|-----------\t|-------------------------------------------------------------------------------------------\t|\n| `end`  \t| `true`  \t| `Boolean` \t| If set to `false` causes the middleware to `next()` instead of `res.end()` when finished. \t|\n\nMiddleware example in [examples/middleware/server.js](examples/middleware/server.js):\n\n```javascript\nvar jayson = require('jayson');\nvar jsonParser = require('body-parser').json;\nvar connect = require('connect');\nvar app = connect();\n\nvar server = jayson.server({\n  add: function(args, callback) {\n    callback(null, args[0] + args[1]);\n  }\n});\n\n// parse request body before the jayson middleware\napp.use(jsonParser());\napp.use(server.middleware());\n\napp.listen(3000);\n```\n\n#### Many interfaces at the same time\n\nA Jayson server can use many interfaces at the same time.\n\nServer example in [examples/many_interfaces/server.js](examples/many_interfaces/server.js) that listens to both `http` and a `https` requests:\n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server();\n\n// \"http\" will be an instance of require('http').Server\nvar http = server.http();\n\n// \"https\" will be an instance of require('https').Server\nvar https = server.https({\n  //cert: require('fs').readFileSync('cert.pem'),\n  //key require('fs').readFileSync('key.pem')\n});\n\nhttp.listen(80, function() {\n  console.log('Listening on *:80');\n});\n\nhttps.listen(443, function() {\n  console.log('Listening on *:443');\n});\n```\n\n#### Using the server as a relay\n\nPassing an instance of a client as a method to the server makes the server relay incoming requests to wherever the client is pointing to. This might be used to delegate computationally expensive functions into a separate server or to abstract a cluster of servers behind a common interface.\n\nFrontend server example in [examples/relay/server_public.js](examples/relay/server_public.js) listening on `*:3000`:\n\n```javascript\nvar jayson = require('jayson');\n\n// create a server where \"add\" will relay a localhost-only server\nvar server = jayson.server({\n  add: jayson.client.http({\n    port: 3001\n  })\n});\n\n// let the frontend server listen to *:3000\nserver.http().listen(3000);\n```\n\nBackend server example in [examples/relay/server_private.js](examples/relay/server_private.js) listening on `*:3001`:\n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server({\n  add: function(args, callback) {\n    callback(null, args[0] + args[1]);\n  }\n});\n\n// let the backend listen to *:3001\nserver.http().listen(3001);\n```\n\nEvery request to `add` on the public server will now relay the request to the private server. See the client example in [examples/relay/client.js](examples/relay/client.js).\n\n#### Method routing\n\nPassing a property named `router` in the server options will enable you to write your own logic for routing requests to specific functions. \n\nServer example with custom routing logic in [examples/method_routing/server.js](examples/method_routing/server.js):\n\n```javascript\nvar jayson = require('jayson');\n\nvar methods = {\n  add: function(args, callback) {\n    callback(null, args[0] + args[1]);\n  }\n};\n\nvar server = jayson.server(methods, {\n  router: function(method, params) {\n    // regular by-name routing first\n    if(typeof(this._methods[method]) === 'function') return this._methods[method];\n    if(method === 'add_2') {\n      var fn = server.getMethod('add').getHandler();\n      return new jayson.Method(function(args, done) {\n        args.unshift(2);\n        fn(args, done);\n      });\n    }\n  }\n});\n\nserver.http().listen(3000);\n```\n\nClient example in [examples/method_routing/client.js](examples/method_routing/client.js) invoking `add_2` on the above server:\n\n```javascript\nvar jayson = require('jayson');\n\n// create a client\nvar client = jayson.client.http({\n  port: 3000\n});\n\n// invoke \"add_2\"\nclient.request('add_2', [3], function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // 5!\n});\n```\n\nServer example of nested routes where each property is separated by a dot (you do not need to use the router option for this):\n\n```javascript\nvar _ = require('lodash');\nvar jayson = require('jayson');\n\nvar methods = {\n  foo: {\n    bar: function(callback) {\n      callback(null, 'ping pong');\n    }\n  },\n  math: {\n    add: function(args, callback) {\n      callback(null, args[0] + args[1]);\n    }\n  }\n};\n\n// this reduction produces an object like this: {'foo.bar': [Function], 'math.add': [Function]}\nvar map = _.reduce(methods, collapse('', '.'), {});\nvar server = jayson.server(map);\n\nfunction collapse(stem, sep) {\n  return function(map, value, key) {\n    var prop = stem ? stem + sep + key : key;\n    if(_.isFunction(value)) map[prop] = value;\n    else if(_.isObject(value)) map = _.reduce(value, collapse(prop, sep), map);\n    return map;\n  }\n}\n```\n\n##### Notes\n\n* If `router` does not return anything, the server will respond with a `Method Not Found` error.\n* The `Server.prototype` methods `method`, `methods`, `removeMethod` and `hasMethod` will not use the `router` method, but will operate on the internal `Server.prototype._methods` map.\n* The `router` method is expected to return instances of `jayson.Method` (>=1.2.0)\n\n#### Method definition\n\nYou can also define server methods inside a wrapping object named `jayson.Method`. This allows additional options about the method to be specified. Using this wrapper - explicitly or implicitly (via server options) - makes it trivial to have your method accept a variable amount of arguments.\n\nThe method class is available as the `Method` or `method` property of  `require('jayson')`. It supports these options:\n\n| Option    \t| Default                        \t| Type                \t| Description                                                            \t|\n|-----------\t|--------------------------------\t|---------------------\t|------------------------------------------------------------------------\t|\n| `handler` \t|                                \t| `Function`          \t| The actual function that will handle a JSON-RPC request to this method \t|\n| `collect` \t| >= 2.0.0 `true` before `false` \t| `Boolean`           \t| Collect JSON-RPC parameters in a single function argument              \t|\n| `params`  \t| null                           \t| `Array|Object|null` \t| Force JSON-RPC parameters to be of a certain type                      \t|\n\nServer example showcasing most features and options in [examples/method_definitions/server.js](examples/method_definitions/server.js):\n\n```javascript\nvar jayson = require('jayson');\nvar _ = require('lodash');\n\nvar methods = {\n\n  // this function will be wrapped in jayson.Method with options given to the server\n  sum: function(args, done) {\n    done(null, sum(args));\n  },\n\n  // this method gets the raw params as first arg to handler\n  sumCollect: new jayson.Method({\n    handler: function(args, done) {\n      var total = sum(args);\n      done(null, total);\n    },\n    collect: true // means \"collect all JSON-RPC parameters in one arg\"\n  }),\n\n  // specifies some default values (alternate definition too)\n  sumDefault: jayson.Method(function(args, done) {\n    var total = sum(args);\n    done(null, total);\n  }, {\n    collect: true,\n    params: {a: 2, b: 5} // map of defaults\n  }),\n\n  // this method returns true when it gets an array (which it always does)\n  isArray: new jayson.Method({\n    handler: function(args, done) {\n      var result = _.isArray(args);\n      done(null, result);\n    },\n    collect: true,\n    params: Array // could also be \"Object\"\n  })\n\n};\n\nvar server = jayson.server(methods, {\n  // Given as options to jayson.Method when adding the method \"sum\"\n  collect: true,\n  params: Array\n});\n\nserver.http().listen(3000);\n\n// sums all numbers in an array\nfunction sum(list) {\n  return _.reduce(list, function(sum, val) {\n    return sum + val;\n  }, 0);\n}\n```\n\nClient example in [examples/method_definitions/client.js](examples/method_definitions/client.js):\n\n```javascript\nvar jayson = require('jayson');\n\nvar client = jayson.client.http({\n  port: 3000\n});\n\n// invoke \"sumCollect\" with array\nclient.request('sumCollect', [3, 5, 9, 11], function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // 28\n});\n\n// invoke \"sumCollect\" with object\nclient.request('sumCollect', {a: 2, b: 3, c: 4}, function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // 9\n});\n\n// invoke \"sumDefault\" with object missing some defined members\nclient.request('sumDefault', {b: 10}, function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // 12\n});\n\n// invoke \"isArray\" with an Object\nclient.request('isArray', {a: 5, b: 2, c: 9}, function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // true\n});\n\nclient.request('sum', [1, 2, 3], function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // 6\n});\n```\n\n##### Notes\n\n* Adding methods as a plain JavaScript function creates an instance of `jayson.Method` internally. For backwards compatibility it will be created with the option \"collect\" set to `false` (v2.0.0). It is possible to affect this by passing the `collect` option to the server. This works similarly for the `params` option.\n\n#### Server events\n\nIn addition to events that are specific to certain interfaces, all servers will emit the following events:\n\n| Event      \t| When                                     \t| Arguments                            \t| Notes                          \t|\n|------------\t|------------------------------------------\t|--------------------------------------\t|--------------------------------\t|\n| `request`  \t| Interpretable non-batch request received \t| 1: Request object                    \t|                                \t|\n| `response` \t| Returning a response                     \t| 1: Request object 2: Response object \t|                                \t|\n| `batch`    \t| Interpretable batch request received     \t| 1. Array of requests                 \t| Emits `request` for every part \t|\n\n#### Server Errors\n\nIf you should like to return an error from an method request to indicate a failure, remember that the [JSON-RPC 2.0][jsonrpc-spec] specification requires the error to be an `Object` with a `code (Integer/Number)` to be regarded as valid. You can also provide a `message (String)` and a `data (Object)` with additional information. Example: \n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server({\n  i_cant_find_anything: function(args, callback) {\n    var error = {code: 404, message: 'Cannot find ' + args.id};\n    callback(error); // will return the error object as given\n  },\n  i_cant_return_a_valid_error: function(callback) {\n    callback({message: 'I forgot to enter a code'}); // will return a pre-defined \"Internal Error\"\n  }\n});\n```\n\n##### Predefined Errors\n\nIt is also possible to cause a method to return one of the predefined [JSON-RPC 2.0 error codes][jsonrpc-spec#error_object] using the server helper function `Server.prototype.error` inside of a server method. Example:\n\n[jsonrpc-spec#error_object]: http://jsonrpc.org/spec.html#error_object\n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server({\n  invalid_params: function(args, callback) {\n    var error = this.error(-32602); // returns an error with the default properties set\n    callback(error);\n  }\n});\n```\n\nYou can even override the default messages:\n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server({\n  error_giver_of_doom: function(callback) {\n    callback(true) // invalid error format, which causes an Internal Error to be returned instead\n  }\n});\n\n// Override the default message\nserver.errorMessages[Server.errors.INTERNAL_ERROR] = 'I has a sad. I cant do anything right';\n```\n\n#### Server CORS\n\nJayson does not include functionality for supporting CORS requests natively but it is easy to use a CORS-enabling middleware\nlike [cors](https://github.com/expressjs/cors). An example of this can be found in [examples/cors/server.js](examples/cors/server.js):\n\n```javascript\nvar jayson = require('jayson');\nvar cors = require('cors');\nvar connect = require('connect');\nvar jsonParser = require('body-parser').json;\nvar app = connect();\n\nvar server = jayson.server({\n  myNameIs: function(args, callback) {\n    callback(null, 'Your name is: ' + args.name);\n  }\n});\n\napp.use(cors({methods: ['POST']}));\napp.use(jsonParser());\napp.use(server.middleware());\n\napp.listen(3000);\n```\n\n### Revivers and Replacers\n\nJSON lacks support for representing types other than the simple ones defined in the [JSON specification][jsonrpc-spec]. Fortunately the JSON methods in JavaScript (`JSON.parse` and `JSON.stringify`) provide options for custom serialization/deserialization routines. Jayson allows you to pass your own routines as options to both clients and servers.\n\nSimple example transferring the state of an object between a client and a server:\n\nShared code between the server and the client in [examples/reviving_and_replacing/shared.js](examples/reviving_and_replacing/shared.js):\n\n```javascript\nvar Counter = exports.Counter = function(value) {\n  this.count = value || 0;\n};\n\nCounter.prototype.increment = function() {\n  this.count += 1;\n};\n\nexports.replacer = function(key, value) {\n  if(value instanceof Counter) {\n    return {$class: 'counter', $props: {count: value.count}};\n  }\n  return value;\n};\n\nexports.reviver = function(key, value) {\n  if(value && value.$class === 'counter') {\n    var obj = new Counter();\n    for(var prop in value.$props) obj[prop] = value.$props[prop];\n    return obj;\n  }\n  return value;\n};\n```\n\nServer example in [examples/reviving_and_replacing/server.js](examples/reviving_and_replacing/server.js):\n\n```javascript\nvar jayson = require('jayson');\nvar shared = require('./shared');\n\n// Set the reviver/replacer options\nvar options = {\n  reviver: shared.reviver,\n  replacer: shared.replacer\n};\n\n// create a server\nvar server = jayson.server({\n  increment: function(args, callback) {\n    args.counter.increment();\n    callback(null, args.counter);\n  }\n}, options);\n\nserver.http().listen(3000);\n```\n\nA client example in [examples/reviving_and_replacing/client.js](examples/reviving_and_replacing/client.js) invoking \"increment\" on the server:\n\n```javascript\nvar jayson = require('jayson');\nvar shared = require('./shared');\n\nvar client = jayson.client.http({\n  port: 3000,\n  reviver: shared.reviver,\n  replacer: shared.replacer\n});\n\n// create the object\nvar params = {\n  counter: new shared.Counter(2)\n}\n\n// invoke \"increment\"\nclient.request('increment', params, function(err, response) {\n  if(err) throw err;\n  var result = response.result;\n  console.log(\n    result instanceof shared.Counter, // true\n    result.count, // 3\n    params.counter === result // false - result is a new object\n  );\n});\n```\n\n#### Notes\n\n* Instead of using a replacer, it is possible to define a `toJSON` method for any JavaScript object. Unfortunately there is no corresponding method for reviving objects (that would not work, obviously), so the _reviver_ always has to be set up manually.\n\n### Named parameters\n\nIt is possible to specify named parameters when doing a client request by passing an Object instead of an Array.\n\nClient example in [examples/named_parameters/client.js](examples/named_parameters/client.js):\n\n```javascript\nvar jayson = require('jayson');\n\nvar client = jayson.client.http({\n  port: 3000\n});\n\nclient.request('add', {b: 1, a: 2}, function(err, response) {\n  if(err) throw err;\n  console.log(response.result); // 3!\n});\n```\n\nServer example in [examples/named_parameters/server.js](examples/named_parameters/server.js):\n\n```javascript\nvar jayson = require('jayson');\n\nvar server = jayson.server({\n  add: function(a, b, callback) {\n    callback(null, a + b);\n  }\n}, {\n  collect: false // don't collect params in a single argument\n});\n\nserver.http().listen(3000);\n```\n\n#### Notes\n\n* If requesting methods on a Jayson server, arguments left out will be `undefined`\n* Too many arguments or arguments with invalid names will be ignored\n* It is assumed that the last argument to a server method is the callback and it will not be filled with something else\n* Parsing a function signature and filling in arguments is generally *not recommended* and should be avoided\n\n### Promises\n\n[es6-promise]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n\n*Since version 2.0.0*\n\nA separate tree that does limited usage of the [ES6 Promise][es6-promise] object is available. The internal API remains callback based, with the addition that promises may be used for two things:\n\n* Returning a Promise when requesting a JSON-RPC method using a Client\n* Returning a Promise inside of a Server method\n\nTo use the separate tree, do a `require('jayson/promise')` instead of `require('jayson')`.\n\nServer example in [examples/promise/server.js](examples/promise/server.js) showing how to return a `Promise` in a server method:\n\n```javascript\nvar jayson = require('../../promise');\nvar _ = require('lodash');\n\nvar server = jayson.server({\n\n  add: function(args) {\n    return new Promise(function(resolve, reject) {\n      var sum = _.reduce(args, function(sum, value) { return sum + value; }, 0);\n      resolve(sum);\n    });\n  },\n\n  // example on how to reject\n  rejection: function(args) {\n    return new Promise(function(resolve, reject) {\n      // server.error just returns {code: 501, message: 'not implemented'}\n      reject(server.error(501, 'not implemented'));\n    });\n  }\n\n});\n\nserver.http().listen(3000);\n```\n\nClient example in [examples/promise/client.js](examples/promise/client.js) showing how to do a request:\n\n```javascript\nvar jayson = require('../../promise');\n\nvar client = jayson.client.http({\n  port: 3000\n});\n\nvar reqs = [\n  client.request('add', [1, 2, 3, 4, 5]),\n  client.request('rejection', [])\n];\n\nPromise.all(reqs).then(function(responses) {\n  console.log(responses[0].result);\n  console.log(responses[1].error);\n});\n```\n\n#### Notes\n\n* JSON-RPC errors will not result in rejection of the Promise. It is however possible that a future version will include a client setting to have JSON-RPC errors result in rejection. Please note that network errors and the like will result in rejection.\n* A `Promise` is considered to have been returned from a server method if the returned object has a property `then` that is a function.\n\n#### Promise Batches\n\n*Since version 2.0.5*\n\nSometimes you may want to return raw requests from a promise client. This needs to be handled differently, because `PromiseClient.prototype.request` would normally always be expected to *return a Promise* which we in this case don't want.\n\nTo solve this, we need to set the fourth parameter to `PromiseClient.prototype.request` explicitly to `false` in order to *not* return a Promise.\n\nClient example in [examples/promise_batches/client.js](examples/promise/client.js) showing how to properly execute a batch request:\n\n```javascript\nvar jayson = require('../../promise');\n\nvar client = jayson.client.http({\n  port: 3000\n});\n\nvar batch = [\n  client.request('add', [1, 2, 3, 4, 5], undefined, false),\n  client.request('add', [5, 6, 7, 8, 9], undefined, false),\n];\n\nclient.request(batch).then(function(responses) {\n  console.log(responses[0].result); // 15\n  console.log(responses[1].result); // 35\n});\n```\n\n##### Notes\n\n* The third parameter to `PromiseClient.prototype.request` above is explicitly set to `undefined` - this parameter would normally represent the desired ID of the call. Remember that `null` would mean a notification (which does not return a response) and other falsy values may actually be used as ids. Setting `undefined` ensures that the id is generated automatically.\n\n### Contributing\n\nHighlighting [issues](https://github.com/tedeh/jayson/issues) or submitting pull\nrequests on [Github](https://github.com/tedeh/jayson) is most welcome.\n\nPlease make sure to follow the style of the project, and lint your code with `npm run lint` before submitting a patch.\n"
}