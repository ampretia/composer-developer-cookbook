constructor object
constructor object
setCredentials object
getConnectionManagerByType string
getConnectionManagerByType string
getConnectionManagerByType string
getConnectionManagerByType string
getConnectionManagerByType string
getConnectionManagerByType string
getConnectionManagerByType string
constructor object
constructor boolean
constructor object
createPouchDB string
createPouchDB object
createPouchDB object
constructor object
constructor boolean
getConnectionManagerByType object
ensureCollection string
getCollection string
get string
createCollection string
createCollection undefined
get string
handleAction function
put string
put object
constructor object
constructor object
constructor string
createCollection object
ensureCollection object
add string
add object
add undefined
get string
handleAction function
put string
put object
fromDirectory string
_getPackageJson string
_processReadme string
constructor object
constructor object
constructor string
isFileInNodeModuleDir boolean
isFileInNodeModuleDir boolean
isFileInNodeModuleDir boolean
processDirectory object
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
_processModelFiles string
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
addModelFiles string
addModelFiles object
addModelFiles object
addModelFiles object
_processModelFiles number
isFileInNodeModuleDir boolean
isFileInNodeModuleDir boolean
isFileInNodeModuleDir boolean
processDirectory object
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
_processScriptFiles string
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
isFileInNodeModuleDir boolean
processFile string
_processScriptFiles number
_processPermissionsAcl string
fromDirectory string
> Installing the Composer Runtime
connectWithCard string
getConnectionManagerByType string
constructor object
constructor boolean
constructor object
createPouchDB string
createPouchDB object
createPouchDB object
constructor object
constructor boolean
ensureCollection string
getCollection string
get string
get object
constructor object
constructor object
constructor string
getCollection object
ensureCollection object
get string
get string
get object
get object
> Starting Business Network on the installed Composer runtime...
start object
start object
_buildStartTransaction object
_buildStartTransaction object
_buildNetworkAdminTransactions object
_buildNetworkAdminTransactions object
_buildNetworkAdminTransactions object
_buildNetworkAdminTransactions object
_buildNetworkAdminTransactions string
_buildNetworkAdminTransactions object
_buildStartTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :constructor()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :constructor()            < 
constructor string
constructor undefined
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined, [object Object]
createPouchDB string
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          > Composer:537fc020-dc26-4ee7-9be1-87dad9ead539, [object Object]
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            < 
constructor string
constructor undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            < 
init object
init string
init object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   > [object Object], init, {"$class":"org.hyperledger.composer.system.StartBusinessNetwork","businessNetworkArchive":"","bootstrapTransactions":[{"$class":"org.hyperledger.composer.system.AddParticipant","resources":[{"$class":"org.hyperledger.composer.system.NetworkAdmin","participantId":"admin"}],"targetRegistry":"resource:org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin","transactionId":"99c6c175-c085-4c25-b06b-be420634aa41","timestamp":"2017-12-05T17:01:02.205Z"},{"$class":"org.hyperledger.composer.system.IssueIdentity","participant":"resource:org.hyperledger.composer.system.NetworkAdmin#admin","identityName":"admin","transactionId":"da483064-d999-4921-94a9-71fe37ec0e78","timestamp":"2017-12-05T17:01:02.205Z"}],"transactionId":"0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d","timestamp":"2017-12-05T17:01:02.204Z"}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Parsing transaction from JSON 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedEventService    :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedHTTPService     :constructor()            < 
transactionStart boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       > false
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Loading business network definition 
init string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Calculated business network definition hash f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
fromArchive number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            > 7539
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading README.md 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading package.json 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Looking for model files 
fromArchive string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Found model file, loading it models/sample.cto
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Looking for JavaScript files 
fromArchive string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Found JavaScript file, loading it lib/sample.js
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading permissions.acl 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading query queries.qry 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded README.md 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded package.json 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded model file 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded JavaScript file 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded permissions.acl 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded package.json 
constructor object
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:constructor()            > null, null
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:constructor()            Using package.json{"engines":{"composer":"^0.11.0"},"name":"basic-sample-network","version":"0.1.5","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://hyperledger.github.io/composer-sample-networks/packages/basic-sample-network/networkimage.svg","networkImageanimated":"https://hyperledger.github.io/composer-sample-networks/packages/basic-sample-network/networkimageanimated.svg","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/basic-sample-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.json","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :constructor()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addSystemModels()        > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addSystemModels()        [object Object] 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addSystemModels()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :constructor()            < 
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkMetadata :constructor()            > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!

Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkMetadata :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded all model, JavaScript, ACL files and Query files 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding model files to model manager 
addModelFiles string
addModelFiles object
addModelFiles object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addModelFiles()          > addModelFiles, /**
 * Sample business network definition.
 */
namespace org.acme.sample

asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}
, models/sample.cto
addModelFiles object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addModelFiles()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added model files to model manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding JavaScript files to script manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added JavaScript files to script manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding ACL files to ACL manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added ACL files to ACL manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding Query files to query manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added Query files to query manager 
fromArchive string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Loaded business network definition, storing in cache 
cacheBusinessNetwork string
cacheBusinessNetwork object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheBusinessNetwork()   > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheBusinessNetwork()   < 
getCachedCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB < 
compile object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                > [object Object]
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding global assert
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method getFactory
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method getSerializer
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method getAssetRegistry
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method getParticipantRegistry
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method getCurrentParticipant
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method post
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method emit
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method buildQuery
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding API method query
processScriptManager object
processScriptManager object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :processScriptManager()   > [object Object], [object Object]
processScriptManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :processScriptManager()   Processing script lib/sample.js
processScript object
processScript object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :processScript()          > [object Object], [object Object]
convertScriptToScriptNode object
convertScriptToScriptNode object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :convertScriptToScriptNod > [object Object], [object Object]
convertScriptToSourceMap object
convertScriptToSourceMap object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :convertScriptToSourceMap > [object Object], [object Object]
convertScriptToSourceMap string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :convertScriptToSourceMap < {"version":3,"sources":["lib/sample.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,iBAAiB,CAAC,EAAE,EAAE;;;IAG3B,IAAI,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;;;IAG7B,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ;;;IAG5B,OAAO,gBAAgB,CAAC,6BAA6B;QACjD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;YAG3B,OAAO,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;;QAEzC,CAAC;QACD,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;;;YAGd,IAAI,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,aAAa,CAAC;YACnE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK;YACtB,KAAK,CAAC,SAAS,EAAE,QAAQ;YACzB,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,QAAQ;YAC5B,IAAI,CAAC,KAAK,CAAC;;QAEf,CAAC,CAAC;;AAEV;AACA","file":"lib/sample.js","sourceRoot":"/home/matthew/github/composer-developer-cookbook/packages/embeddedDevTest","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sample transaction processor function.\n * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.\n * @transaction\n */\nfunction sampleTransaction(tx) {\n\n    // Save the old value of the asset.\n    var oldValue = tx.asset.value;\n\n    // Update the asset with the new value.\n    tx.asset.value = tx.newValue;\n\n    // Get the asset registry for the asset.\n    return getAssetRegistry('org.acme.sample.SampleAsset')\n        .then(function (assetRegistry) {\n\n            // Update the asset in the asset registry.\n            return assetRegistry.update(tx.asset);\n\n        })\n        .then(function () {\n\n            // Emit an event for the modified asset.\n            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');\n            event.asset = tx.asset;\n            event.oldValue = oldValue;\n            event.newValue = tx.newValue;\n            emit(event);\n\n        });\n\n}\n"]}
transformScript string
transformScript string
transformScript string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedScriptCompiler  :transformScript()        > lib/sample.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample transaction processor function.
 * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.
 * @transaction
 */
function sampleTransaction(tx) {

    // Save the old value of the asset.
    var oldValue = tx.asset.value;

    // Update the asset with the new value.
    tx.asset.value = tx.newValue;

    // Get the asset registry for the asset.
    return getAssetRegistry('org.acme.sample.SampleAsset')
        .then(function (assetRegistry) {

            // Update the asset in the asset registry.
            return assetRegistry.update(tx.asset);

        })
        .then(function () {

            // Emit an event for the modified asset.
            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');
            event.asset = tx.asset;
            event.oldValue = oldValue;
            event.newValue = tx.newValue;
            emit(event);

        });

}
, {"version":3,"sources":["lib/sample.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,iBAAiB,CAAC,EAAE,EAAE;;;IAG3B,IAAI,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;;;IAG7B,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ;;;IAG5B,OAAO,gBAAgB,CAAC,6BAA6B;QACjD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;YAG3B,OAAO,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;;QAEzC,CAAC;QACD,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;;;YAGd,IAAI,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,aAAa,CAAC;YACnE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK;YACtB,KAAK,CAAC,SAAS,EAAE,QAAQ;YACzB,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,QAAQ;YAC5B,IAAI,CAAC,KAAK,CAAC;;QAEf,CAAC,CAAC;;AAEV;AACA","file":"lib/sample.js","sourceRoot":"/home/matthew/github/composer-developer-cookbook/packages/embeddedDevTest","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sample transaction processor function.\n * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.\n * @transaction\n */\nfunction sampleTransaction(tx) {\n\n    // Save the old value of the asset.\n    var oldValue = tx.asset.value;\n\n    // Update the asset with the new value.\n    tx.asset.value = tx.newValue;\n\n    // Get the asset registry for the asset.\n    return getAssetRegistry('org.acme.sample.SampleAsset')\n        .then(function (assetRegistry) {\n\n            // Update the asset in the asset registry.\n            return assetRegistry.update(tx.asset);\n\n        })\n        .then(function () {\n\n            // Emit an event for the modified asset.\n            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');\n            event.asset = tx.asset;\n            event.oldValue = oldValue;\n            event.newValue = tx.newValue;\n            emit(event);\n\n        });\n\n}\n"]}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedScriptCompiler  :transformScript()        Not running under Istanbul 
transformScript string
transformScript string
transformScript string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :transformScript()        > lib/sample.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample transaction processor function.
 * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.
 * @transaction
 */
function sampleTransaction(tx) {

    // Save the old value of the asset.
    var oldValue = tx.asset.value;

    // Update the asset with the new value.
    tx.asset.value = tx.newValue;

    // Get the asset registry for the asset.
    return getAssetRegistry('org.acme.sample.SampleAsset')
        .then(function (assetRegistry) {

            // Update the asset in the asset registry.
            return assetRegistry.update(tx.asset);

        })
        .then(function () {

            // Emit an event for the modified asset.
            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');
            event.asset = tx.asset;
            event.oldValue = oldValue;
            event.newValue = tx.newValue;
            emit(event);

        });

}
, {"version":3,"sources":["lib/sample.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,iBAAiB,CAAC,EAAE,EAAE;;;IAG3B,IAAI,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;;;IAG7B,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ;;;IAG5B,OAAO,gBAAgB,CAAC,6BAA6B;QACjD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;YAG3B,OAAO,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;;QAEzC,CAAC;QACD,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;;;YAGd,IAAI,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,aAAa,CAAC;YACnE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK;YACtB,KAAK,CAAC,SAAS,EAAE,QAAQ;YACzB,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,QAAQ;YAC5B,IAAI,CAAC,KAAK,CAAC;;QAEf,CAAC,CAAC;;AAEV;AACA","file":"lib/sample.js","sourceRoot":"/home/matthew/github/composer-developer-cookbook/packages/embeddedDevTest","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sample transaction processor function.\n * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.\n * @transaction\n */\nfunction sampleTransaction(tx) {\n\n    // Save the old value of the asset.\n    var oldValue = tx.asset.value;\n\n    // Update the asset with the new value.\n    tx.asset.value = tx.newValue;\n\n    // Get the asset registry for the asset.\n    return getAssetRegistry('org.acme.sample.SampleAsset')\n        .then(function (assetRegistry) {\n\n            // Update the asset in the asset registry.\n            return assetRegistry.update(tx.asset);\n\n        })\n        .then(function () {\n\n            // Emit an event for the modified asset.\n            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');\n            event.asset = tx.asset;\n            event.oldValue = oldValue;\n            event.newValue = tx.newValue;\n            emit(event);\n\n        });\n\n}\n"]}
transformScript object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :transformScript()        < [object Object]
transformScript object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedScriptCompiler  :transformScript()        < [object Object]
convertScriptToScriptNode object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :convertScriptToScriptNod < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample transaction processor function.
 * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.
 * @transaction
 */
function sampleTransaction(tx) {

    // Save the old value of the asset.
    var oldValue = tx.asset.value;

    // Update the asset with the new value.
    tx.asset.value = tx.newValue;

    // Get the asset registry for the asset.
    return getAssetRegistry('org.acme.sample.SampleAsset')
        .then(function (assetRegistry) {

            // Update the asset in the asset registry.
            return assetRegistry.update(tx.asset);

        })
        .then(function () {

            // Emit an event for the modified asset.
            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');
            event.asset = tx.asset;
            event.oldValue = oldValue;
            event.newValue = tx.newValue;
            emit(event);

        });

}

processScript string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :processScript()          Adding function declaration sampleTransaction
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :processScript()          < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :processScriptManager()   < 
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                Adding function declaration sampleTransaction
compile object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ScriptCompiler          :compile()                < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Loaded compiled script bundle, storing in cache 
cacheCompiledScriptBundle string
cacheCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheCompiledScriptBundl > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheCompiledScriptBundl < 
getCachedCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu < 
compile object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : QueryCompiler           :compile()                > [object Object]
visit object
visit object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : QueryCompiler           :visit()                  > [object Object], [object Object]
visitQueryManager object
visitQueryManager object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : QueryCompiler           :visitQueryManager()      > [object Object], [object Object]
visitQueryManager object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : QueryCompiler           :visitQueryManager()      < 
visit object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : QueryCompiler           :visit()                  < 
constructor object
constructor object
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledQueryBundle     :constructor()            > [object Object], [object Object], 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledQueryBundle     :constructor()            < 
compile object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : QueryCompiler           :compile()                < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Loaded compiled query bundle, storing in cache 
cacheCompiledQueryBundle string
cacheCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheCompiledQueryBundle > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheCompiledQueryBundle < 
getCachedCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund < 
compile object
compile object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                > [object Object], [object Object]
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding global assert
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method getFactory
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method getSerializer
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method getAssetRegistry
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method getParticipantRegistry
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method getCurrentParticipant
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method post
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method emit
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method buildQuery
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding API method query
processScriptManager object
processScriptManager object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processScriptManager()   > [object Object], [object Object]
processScriptManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processScriptManager()   Processing script lib/sample.js
processScript object
processScript object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processScript()          > [object Object], [object Object]
convertScriptToScriptNode object
convertScriptToScriptNode object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :convertScriptToScriptNod > [object Object], [object Object]
convertScriptToSourceMap object
convertScriptToSourceMap object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :convertScriptToSourceMap > [object Object], [object Object]
convertScriptToSourceMap string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :convertScriptToSourceMap < {"version":3,"sources":["lib/sample.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,iBAAiB,CAAC,EAAE,EAAE;;;IAG3B,IAAI,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;;;IAG7B,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ;;;IAG5B,OAAO,gBAAgB,CAAC,6BAA6B;QACjD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;YAG3B,OAAO,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;;QAEzC,CAAC;QACD,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;;;YAGd,IAAI,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,aAAa,CAAC;YACnE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK;YACtB,KAAK,CAAC,SAAS,EAAE,QAAQ;YACzB,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,QAAQ;YAC5B,IAAI,CAAC,KAAK,CAAC;;QAEf,CAAC,CAAC;;AAEV;AACA","file":"lib/sample.js","sourceRoot":"/home/matthew/github/composer-developer-cookbook/packages/embeddedDevTest","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sample transaction processor function.\n * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.\n * @transaction\n */\nfunction sampleTransaction(tx) {\n\n    // Save the old value of the asset.\n    var oldValue = tx.asset.value;\n\n    // Update the asset with the new value.\n    tx.asset.value = tx.newValue;\n\n    // Get the asset registry for the asset.\n    return getAssetRegistry('org.acme.sample.SampleAsset')\n        .then(function (assetRegistry) {\n\n            // Update the asset in the asset registry.\n            return assetRegistry.update(tx.asset);\n\n        })\n        .then(function () {\n\n            // Emit an event for the modified asset.\n            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');\n            event.asset = tx.asset;\n            event.oldValue = oldValue;\n            event.newValue = tx.newValue;\n            emit(event);\n\n        });\n\n}\n"]}
transformScript string
transformScript string
transformScript string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :transformScript()        > lib/sample.js, /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample transaction processor function.
 * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.
 * @transaction
 */
function sampleTransaction(tx) {

    // Save the old value of the asset.
    var oldValue = tx.asset.value;

    // Update the asset with the new value.
    tx.asset.value = tx.newValue;

    // Get the asset registry for the asset.
    return getAssetRegistry('org.acme.sample.SampleAsset')
        .then(function (assetRegistry) {

            // Update the asset in the asset registry.
            return assetRegistry.update(tx.asset);

        })
        .then(function () {

            // Emit an event for the modified asset.
            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');
            event.asset = tx.asset;
            event.oldValue = oldValue;
            event.newValue = tx.newValue;
            emit(event);

        });

}
, {"version":3,"sources":["lib/sample.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,SAAS,iBAAiB,CAAC,EAAE,EAAE;;;IAG3B,IAAI,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK;;;IAG7B,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ;;;IAG5B,OAAO,gBAAgB,CAAC,6BAA6B;QACjD,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;YAG3B,OAAO,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;;QAEzC,CAAC;QACD,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;;;YAGd,IAAI,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,aAAa,CAAC;YACnE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK;YACtB,KAAK,CAAC,SAAS,EAAE,QAAQ;YACzB,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,QAAQ;YAC5B,IAAI,CAAC,KAAK,CAAC;;QAEf,CAAC,CAAC;;AAEV;AACA","file":"lib/sample.js","sourceRoot":"/home/matthew/github/composer-developer-cookbook/packages/embeddedDevTest","sourcesContent":["/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sample transaction processor function.\n * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.\n * @transaction\n */\nfunction sampleTransaction(tx) {\n\n    // Save the old value of the asset.\n    var oldValue = tx.asset.value;\n\n    // Update the asset with the new value.\n    tx.asset.value = tx.newValue;\n\n    // Get the asset registry for the asset.\n    return getAssetRegistry('org.acme.sample.SampleAsset')\n        .then(function (assetRegistry) {\n\n            // Update the asset in the asset registry.\n            return assetRegistry.update(tx.asset);\n\n        })\n        .then(function () {\n\n            // Emit an event for the modified asset.\n            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');\n            event.asset = tx.asset;\n            event.oldValue = oldValue;\n            event.newValue = tx.newValue;\n            emit(event);\n\n        });\n\n}\n"]}
transformScript object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :transformScript()        < [object Object]
convertScriptToScriptNode object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :convertScriptToScriptNod < /*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample transaction processor function.
 * @param {org.acme.sample.SampleTransaction} tx The sample transaction instance.
 * @transaction
 */
function sampleTransaction(tx) {

    // Save the old value of the asset.
    var oldValue = tx.asset.value;

    // Update the asset with the new value.
    tx.asset.value = tx.newValue;

    // Get the asset registry for the asset.
    return getAssetRegistry('org.acme.sample.SampleAsset')
        .then(function (assetRegistry) {

            // Update the asset in the asset registry.
            return assetRegistry.update(tx.asset);

        })
        .then(function () {

            // Emit an event for the modified asset.
            var event = getFactory().newEvent('org.acme.sample', 'SampleEvent');
            event.asset = tx.asset;
            event.oldValue = oldValue;
            event.newValue = tx.newValue;
            emit(event);

        });

}

Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processScript()          < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processScriptManager()   < 
processAclManager object
processAclManager object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      > [object Object], [object Object]
processAclManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      Processing ACL rule EverybodyCanReadEverything
processAclRule object
processAclRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         > [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         < 
processAclManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      Processing ACL rule EverybodyCanSubmitTransactions
processAclRule object
processAclRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         > [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         < 
processAclManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      Processing ACL rule OwnerHasFullAccessToTheirAssets
processAclRule object
processAclRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         > [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         < 
processAclManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      Processing ACL rule SystemACL
processAclRule object
processAclRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         > [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         < 
processAclManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      Processing ACL rule NetworkAdminUser
processAclRule object
processAclRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         > [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         < 
processAclManager string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      Processing ACL rule NetworkAdminSystem
processAclRule object
processAclRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         > [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclRule()         < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :processAclManager()      < 
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding ACL rule EverybodyCanReadEverything
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding ACL rule EverybodyCanSubmitTransactions
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding ACL rule OwnerHasFullAccessToTheirAssets
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding ACL rule SystemACL
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding ACL rule NetworkAdminUser
compile string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                Adding ACL rule NetworkAdminSystem
compile object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AclCompiler             :compile()                < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Loaded compiled ACL bundle, storing in cache 
cacheCompiledAclBundle string
cacheCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheCompiledAclBundle() > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :cacheCompiledAclBundle() < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Loaded business network definition, storing in $sysdata collection 
ensureCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       > $sysdata
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysdata
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysdata  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       The collection does not exist, creating 
createCollection string
createCollection undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > $sysdata, undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysdata  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysdata
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensureCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       < [object Object]
add string
add object
add undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > businessnetwork, [object Object], undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4businessnetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
add string
add object
add undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > metanetwork, [object Object], undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4metanetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Ensuring that sysregistries collection exists 
ensureCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       > $sysregistries
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysregistries
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysregistries  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       The collection does not exist, creating 
createCollection string
createCollection undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > $sysregistries, undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysregistries  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysregistries
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensureCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       < [object Object]
init string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Initializing context 2 0.17.0
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             > [object Object]
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin Business network definition already specified 
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got business network archive 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle Compiled script bundle already specified 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled script bundle 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( Compiled query bundle already specified 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled query bundle 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  Compiled ACL bundle already specified 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled ACL bundle 
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading sysregistries collection [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Not loading current participant as processing deployment 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Deploying or reinitializing, not setting current participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Creating default registries 
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   > 
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Asset, org.hyperledger.composer.system.AssetRegistry, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Asset, org.hyperledger.composer.system.AssetRegistry, Asset registry for org.hyperledger.composer.system.AssetRegistry, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.AssetRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.AssetRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.AssetRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.AssetRegistry, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Asset:org.hyperledger.composer.system.AssetRegistry, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.AssetRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Asset:org.hyperledger.composer.system.AssetRegistry, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.AssetRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.AssetRegistry
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Asset, org.hyperledger.composer.system.ParticipantRegistry, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Asset, org.hyperledger.composer.system.ParticipantRegistry, Asset registry for org.hyperledger.composer.system.ParticipantRegistry, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.ParticipantRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.ParticipantRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.ParticipantRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.ParticipantRegistry, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Asset:org.hyperledger.composer.system.ParticipantRegistry, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.ParticipantRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Asset:org.hyperledger.composer.system.ParticipantRegistry, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.ParticipantRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.ParticipantRegistry
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Asset, org.hyperledger.composer.system.TransactionRegistry, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Asset, org.hyperledger.composer.system.TransactionRegistry, Asset registry for org.hyperledger.composer.system.TransactionRegistry, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.TransactionRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.TransactionRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.TransactionRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.TransactionRegistry, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Asset:org.hyperledger.composer.system.TransactionRegistry, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.TransactionRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Asset:org.hyperledger.composer.system.TransactionRegistry, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.TransactionRegistry  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.TransactionRegistry
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Participant, org.hyperledger.composer.system.NetworkAdmin, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Participant, org.hyperledger.composer.system.NetworkAdmin, Participant registry for org.hyperledger.composer.system.NetworkAdmin, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Participant:org.hyperledger.composer.system.NetworkAdmin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Participant:org.hyperledger.composer.system.NetworkAdmin, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Participant:org.hyperledger.composer.system.NetworkAdmin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Participant:org.hyperledger.composer.system.NetworkAdmin, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Participant:org.hyperledger.composer.system.NetworkAdmin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Participant:org.hyperledger.composer.system.NetworkAdmin
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Asset, org.hyperledger.composer.system.HistorianRecord, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Asset, org.hyperledger.composer.system.HistorianRecord, Asset registry for org.hyperledger.composer.system.HistorianRecord, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.HistorianRecord
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.HistorianRecord
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.HistorianRecord  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.HistorianRecord, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Asset:org.hyperledger.composer.system.HistorianRecord, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.HistorianRecord  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Asset:org.hyperledger.composer.system.HistorianRecord, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.HistorianRecord  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.HistorianRecord
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.AddAsset, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.AddAsset, Transaction registry for org.hyperledger.composer.system.AddAsset, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.AddAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.AddAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.AddAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.AddAsset, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.AddAsset, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.AddAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.AddAsset, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.AddAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.AddAsset
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.UpdateAsset, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.UpdateAsset, Transaction registry for org.hyperledger.composer.system.UpdateAsset, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.UpdateAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.UpdateAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.UpdateAsset, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.UpdateAsset, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.UpdateAsset, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.UpdateAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.UpdateAsset
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.RemoveAsset, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.RemoveAsset, Transaction registry for org.hyperledger.composer.system.RemoveAsset, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.RemoveAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.RemoveAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RemoveAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.RemoveAsset, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.RemoveAsset, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RemoveAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.RemoveAsset, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.RemoveAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.RemoveAsset
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.AddParticipant, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.AddParticipant, Transaction registry for org.hyperledger.composer.system.AddParticipant, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.AddParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.AddParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.AddParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.AddParticipant, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.AddParticipant, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.AddParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.AddParticipant, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.AddParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.AddParticipant
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.UpdateParticipant, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.UpdateParticipant, Transaction registry for org.hyperledger.composer.system.UpdateParticipant, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.UpdateParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.UpdateParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.UpdateParticipant, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.UpdateParticipant, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.UpdateParticipant, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.UpdateParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.UpdateParticipant
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.RemoveParticipant, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.RemoveParticipant, Transaction registry for org.hyperledger.composer.system.RemoveParticipant, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.RemoveParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.RemoveParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RemoveParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.RemoveParticipant, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.RemoveParticipant, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RemoveParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.RemoveParticipant, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.RemoveParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.RemoveParticipant
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Asset, org.hyperledger.composer.system.Identity, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Asset, org.hyperledger.composer.system.Identity, Asset registry for org.hyperledger.composer.system.Identity, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.Identity, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Asset:org.hyperledger.composer.system.Identity, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Asset:org.hyperledger.composer.system.Identity, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.Identity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.IssueIdentity, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.IssueIdentity, Transaction registry for org.hyperledger.composer.system.IssueIdentity, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.IssueIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.IssueIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.IssueIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.IssueIdentity, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.IssueIdentity, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.IssueIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.IssueIdentity, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.IssueIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.IssueIdentity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.BindIdentity, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.BindIdentity, Transaction registry for org.hyperledger.composer.system.BindIdentity, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.BindIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.BindIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.BindIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.BindIdentity, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.BindIdentity, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.BindIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.BindIdentity, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.BindIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.BindIdentity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.ActivateCurrentIdentity, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.ActivateCurrentIdentity, Transaction registry for org.hyperledger.composer.system.ActivateCurrentIdentity, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.ActivateCurrentIdentity, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.RevokeIdentity, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.RevokeIdentity, Transaction registry for org.hyperledger.composer.system.RevokeIdentity, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.RevokeIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.RevokeIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RevokeIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.RevokeIdentity, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.RevokeIdentity, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RevokeIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.RevokeIdentity, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.RevokeIdentity  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.RevokeIdentity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.StartBusinessNetwork, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.StartBusinessNetwork, Transaction registry for org.hyperledger.composer.system.StartBusinessNetwork, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.StartBusinessNetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.StartBusinessNetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.StartBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.StartBusinessNetwork, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.StartBusinessNetwork, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.StartBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.StartBusinessNetwork, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.StartBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.StartBusinessNetwork
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.ResetBusinessNetwork, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.ResetBusinessNetwork, Transaction registry for org.hyperledger.composer.system.ResetBusinessNetwork, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.ResetBusinessNetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.ResetBusinessNetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.ResetBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.ResetBusinessNetwork, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.ResetBusinessNetwork, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.ResetBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.ResetBusinessNetwork, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.ResetBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.ResetBusinessNetwork
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.UpdateBusinessNetwork, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.UpdateBusinessNetwork, Transaction registry for org.hyperledger.composer.system.UpdateBusinessNetwork, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.UpdateBusinessNetwork, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createSystemDefaults string
createSystemDefaults string
createSystemDefaults boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   Creating registry Transaction, org.hyperledger.composer.system.SetLogLevel, true
ensure string
ensure string
ensure string
ensure boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.hyperledger.composer.system.SetLogLevel, Transaction registry for org.hyperledger.composer.system.SetLogLevel, true
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.SetLogLevel
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.SetLogLevel
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.SetLogLevel  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.SetLogLevel, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.hyperledger.composer.system.SetLogLevel, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.SetLogLevel  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.hyperledger.composer.system.SetLogLevel, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.SetLogLevel  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.SetLogLevel
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createSystemDefaults()   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createNetworkDefaults()  > 
createNetworkDefaults string
createNetworkDefaults string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createNetworkDefaults()  Creating registry Asset, org.acme.sample.SampleAsset
ensure string
ensure string
ensure string
ensure undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Asset, org.acme.sample.SampleAsset, Asset registry for org.acme.sample.SampleAsset, undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.acme.sample.SampleAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.acme.sample.SampleAsset
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.acme.sample.SampleAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.acme.sample.SampleAsset, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Asset:org.acme.sample.SampleAsset, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.acme.sample.SampleAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.acme.sample.SampleAsset, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > org.acme.sample.SampleAsset, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.AssetRegistry 4org.acme.sample.SampleAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Asset:org.acme.sample.SampleAsset, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.acme.sample.SampleAsset  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.acme.sample.SampleAsset
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createNetworkDefaults string
createNetworkDefaults string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createNetworkDefaults()  Creating registry Participant, org.acme.sample.SampleParticipant
ensure string
ensure string
ensure string
ensure undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Participant, org.acme.sample.SampleParticipant, Participant registry for org.acme.sample.SampleParticipant, undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Participant:org.acme.sample.SampleParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Participant:org.acme.sample.SampleParticipant
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Participant:org.acme.sample.SampleParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.ParticipantRegistry#org.acme.sample.SampleParticipant, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Participant:org.acme.sample.SampleParticipant, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Participant:org.acme.sample.SampleParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.ParticipantRegistry#org.acme.sample.SampleParticipant, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > org.acme.sample.SampleParticipant, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.ParticipantRegistry 4org.acme.sample.SampleParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Participant:org.acme.sample.SampleParticipant, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Participant:org.acme.sample.SampleParticipant  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Participant:org.acme.sample.SampleParticipant
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
createNetworkDefaults string
createNetworkDefaults string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createNetworkDefaults()  Creating registry Transaction, org.acme.sample.SampleTransaction
ensure string
ensure string
ensure string
ensure undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 > Transaction, org.acme.sample.SampleTransaction, Transaction registry for org.acme.sample.SampleTransaction, undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.acme.sample.SampleTransaction
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.acme.sample.SampleTransaction
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.acme.sample.SampleTransaction  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 The registry does not exist, creating 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.acme.sample.SampleTransaction, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > Transaction:org.acme.sample.SampleTransaction, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.acme.sample.SampleTransaction  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.acme.sample.SampleTransaction, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > org.acme.sample.SampleTransaction, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.TransactionRegistry 4org.acme.sample.SampleTransaction  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
createCollection string
createCollection boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       > Transaction:org.acme.sample.SampleTransaction, false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.acme.sample.SampleTransaction  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, {});
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.acme.sample.SampleTransaction
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
createCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createCollection()       < [object Object]
ensure object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :ensure()                 < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :createNetworkDefaults()  < 
init string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Executing bootstrap transaction 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0
submitTransaction object
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      > [object Object], {"$class":"org.hyperledger.composer.system.AddParticipant","resources":[{"$class":"org.hyperledger.composer.system.NetworkAdmin","participantId":"admin"}],"targetRegistry":"resource:org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin","transactionId":"0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0","timestamp":"2017-12-05T17:01:02.205Z"}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from JSON 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from parsed JSON object 
constructor object
constructor object
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            > Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}, [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.AddParticipant 
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsed transaction, resolving it Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :constructor()            < 
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                > Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property resources
resolveResourceOrConcept number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is an array, iterating over values 1
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property targetRegistry
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is a relationship, resolving Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property transactionId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property timestamp
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring Tue Dec 05 2017 17:01:02 GMT+0000 (GMT)
resolveArray object
resolveArray object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           > Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, [object Object]
resolveArray string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           Array item is a resource, resolving Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property participantId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring admin
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveArray object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveRelationship string
resolveRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    > Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}, [object Object]
getRegistryForRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh > Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}
getRegistryForRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh Got class declaration ClassDeclaration {id=org.hyperledger.composer.system.ParticipantRegistry super=Registry enum=false abstract=false}
getRegistryForRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh Getting registry org.hyperledger.composer.system.ParticipantRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.ParticipantRegistry
getRegistryForRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh < [object Object]
resolveRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    Getting resource in registry org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.ParticipantRegistry 4org.hyperledger.composer.system.NetworkAdmin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    Failed to resolve relationship [object Object]
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            > Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}, [object Object]
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining identifier property registryId
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining invalid property name
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining invalid property type
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining invalid property system
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            < 
resolveRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    < Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                < Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Api                     :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Api                     :constructor()            < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.IssueIdentity, issueIdentity(api, transaction) {
        const method = 'issueIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Create the temporary identifier, which is hash(name, issuer)
                const sha256 = createHash('sha256');
                const issuer = this.identityService.getIssuer();
                sha256.update(transaction.identityName, 'utf8');
                sha256.update(issuer, 'utf8');
                const identifier = sha256.digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identifier);
                Object.assign(identity, {
                    name: transaction.identityName,
                    issuer,
                    certificate: '',
                    state: 'ISSUED',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.BindIdentity, bindIdentity(api, transaction) {
        const method = 'bindIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Parse the certificate into a byte array.
                const bytes = transaction.certificate
                    .replace(/-----BEGIN CERTIFICATE-----/, '')
                    .replace(/-----END CERTIFICATE-----/, '')
                    .replace(/[\r\n]+/g, '');
                const buffer = Buffer.from(bytes, 'base64');
                const sha256 = createHash('sha256');
                const identityId = sha256.update(buffer).digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identityId);
                Object.assign(identity, {
                    name: '',
                    issuer: '',
                    certificate: transaction.certificate,
                    state: 'BOUND',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.ActivateCurrentIdentity, activateCurrentIdentity(api, transaction) {
        const method = 'activateCurrentIdentity';
        LOG.entry(method, api, transaction);
        let identityRegistry;
        return this.getIdentityRegistry()
            .then((identityRegistry_) => {
                identityRegistry = identityRegistry_;
                return this.getIdentity();
            })
            .then((identity) => {

                // If the identity has been issued, we must delete it and then create a new one.
                if (identity.state === 'ISSUED') {
                    return this.activateIssuedIdentity(identityRegistry, identity);
                }

                // If the identity has been bound, then we can update it.
                if (identity.state === 'BOUND') {
                    return this.activateBoundIdentity(identityRegistry, identity);
                }

                // Shouldn't get here.
                throw new Error('The current identity cannot be activated because it is in an unknown state: ' + identity.state);

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RevokeIdentity, revokeIdentity(api, transaction) {
        const method = 'revokeIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Ensure the identity is not already revoked.
                if (transaction.identity.state === 'REVOKED') {
                    throw new Error('The specified identity has already been revoked');
                }

                // Revoke the identity and update it in the identity registry.
                Object.assign(transaction.identity, {
                    state: 'REVOKED'
                });
                return identityRegistry.update(transaction.identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :constructor()            > [object Object]
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.AddAsset, addResources(api, transaction) {
        const method = 'addResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.addAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RemoveAsset, removeResources(api, transaction) {
        const method = 'removeResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.removeAll(transaction.resourceIds);
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.UpdateAsset, updateResources(api, transaction) {
        const method = 'updateResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.updateAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.AddParticipant, addResources(api, transaction) {
        const method = 'addResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.addAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RemoveParticipant, removeResources(api, transaction) {
        const method = 'removeResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.removeAll(transaction.resourceIds);
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.UpdateParticipant, updateResources(api, transaction) {
        const method = 'updateResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.updateAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :<ResourceManager>()      Binding in the tx names and impl 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.StartBusinessNetwork, startBusinessNetwork(api, transaction) {
        const method = 'startBusinessNetwork';
        LOG.entry(method, transaction);
        LOG.exit(method);
        return Promise.resolve();
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.UpdateBusinessNetwork, updateBusinessNetwork(api, transaction) {
        const method = 'updateBusinessNetwork';
        LOG.entry(method, transaction);
        let dataService = this.context.getDataService();
        let businessNetworkBase64, businessNetworkHash, businessNetworkDefinition;
        let compiledScriptBundle, compiledQueryBundle, compiledAclBundle;
        let sysdata, resource;
        return dataService.getCollection('$sysdata')
            .then((result) => {
                sysdata = result;
                return sysdata.get('metanetwork');
            })
            .then((result) => {
                resource = this.context.getSerializer().fromJSON(result);
                return this.context.getAccessController().check(resource, 'UPDATE');
            })
            // return Promise.resolve()
            .then(() => {

                // Load, validate, and hash the business network definition.
                LOG.debug(method, 'Loading business network definition');
                businessNetworkBase64 = transaction.businessNetworkArchive;
                let businessNetworkArchive = Buffer.from(businessNetworkBase64, 'base64');
                let sha256 = createHash('sha256');
                businessNetworkHash = sha256.update(businessNetworkBase64, 'utf8').digest('hex');
                LOG.debug(method, 'Calculated business network definition hash', businessNetworkHash);
                return BusinessNetworkDefinition.fromArchive(businessNetworkArchive);

            })
            .then((businessNetworkDefinition_) => {

                // // Cache the business network.
                businessNetworkDefinition = businessNetworkDefinition_;
                LOG.debug(method, 'Loaded business network definition, storing in cache');
                Context.cacheBusinessNetwork(businessNetworkHash, businessNetworkDefinition);

                // Cache the compiled script bundle.
                compiledScriptBundle = this.context.getScriptCompiler().compile(businessNetworkDefinition.getScriptManager());
                LOG.debug(method, 'Loaded compiled script bundle, storing in cache');
                Context.cacheCompiledScriptBundle(businessNetworkHash, compiledScriptBundle);

                // Cache the compiled query bundle.
                compiledQueryBundle = this.context.getQueryCompiler().compile(businessNetworkDefinition.getQueryManager());
                LOG.debug(method, 'Loaded compiled query bundle, storing in cache');
                Context.cacheCompiledQueryBundle(businessNetworkHash, compiledQueryBundle);

                // Cache the compiled ACL bundle.
                compiledAclBundle = this.context.getAclCompiler().compile(businessNetworkDefinition.getAclManager(), businessNetworkDefinition.getScriptManager());
                LOG.debug(method, 'Loaded compiled ACL bundle, storing in cache');
                Context.cacheCompiledAclBundle(businessNetworkHash, compiledAclBundle);

                // Get the sysdata collection where the business network definition is stored.
                LOG.debug(method, 'Loaded business network definition, storing in $sysdata collection');

                // Update the business network definition in the sysdata collection.
                return sysdata.update('businessnetwork', {
                    data: businessNetworkBase64,
                    hash: businessNetworkHash
                });

            })
            .then(() => {

                // Reinitialize the context to reload the business network.
                LOG.debug(method, 'Reinitializing context');
                return this.context.initialize({
                    businessNetworkDefinition: businessNetworkDefinition,
                    compiledScriptBundle: compiledScriptBundle,
                    compiledQueryBundle: compiledQueryBundle,
                    compiledAclBundle: compiledAclBundle,
                    reinitialize: true
                });

            })
            .then(() => {

                // Create all other default registries.
                LOG.debug(method, 'Creating default registries');
                let registryManager = this.context.getRegistryManager();
                return registryManager.createDefaults();

            })
            .then(() => {
                LOG.exit(method);
            });

    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.ResetBusinessNetwork, resetBusinessNetwork(api, transaction) {
        const method = 'resetBusinessNetwork';
        LOG.entry(method, transaction);
        let dataService = this.context.getDataService();

        let sysdata, resource;
        return dataService.getCollection('$sysdata')
            .then((result) => {
                sysdata = result;
                return sysdata.get('metanetwork');
            })
            .then((result) => {
                resource = this.context.getSerializer().fromJSON(result);
                return this.context.getAccessController().check(resource, 'UPDATE');
            })
            .then( ()=>{
                return this._resetRegistries( 'Asset');
            })
            .then(() => {
                return this._resetRegistries( 'Participant');
            })
            .then(() => {
                return this._resetRegistries( 'Transaction');
            })
            .then ( ()=> {
                // force creation of defaults as we know the don't exist
                // Create all other default registries.
                LOG.debug(method, 'Creating default registries');
                let registryManager = this.context.getRegistryManager();
                return registryManager.createDefaults(true);
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.SetLogLevel, setLogLevel(api, transaction) {
        const method = 'setLogLevel';
        LOG.entry(method, transaction);
        let dataService = this.context.getDataService();
        let sysdata, resource;
        return dataService.getCollection('$sysdata')
            .then((result) => {
                sysdata = result;
                return sysdata.get('metanetwork');
            })
            .then((result) => {
                resource = this.context.getSerializer().fromJSON(result);
                return this.context.getAccessController().check(resource, 'UPDATE');
            })
            .then(() => {
                return this.context.getLoggingService().setLogLevel(transaction.newLogLevel);
            });


    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                Calling handler 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :addResources()           > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.NetworkAdmin#admin, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > admin, [object Object], undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Participant:org.hyperledger.composer.system.NetworkAdmin 4admin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :addResources()           < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 1
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      > Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
findFunctionNames string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Looking at function declaration sampleTransaction
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function is annotated with @transaction 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function parameter type does not match transaction 
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                < 0
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting historian 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.HistorianRecord
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.AddParticipant 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.AddParticipant
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing executed transaction in transaction registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Transaction:org.hyperledger.composer.system.AddParticipant 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
createHistorianRecord object
createHistorianRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  > Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  created historian record 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  assuming admin userid again 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing historian record in the registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.HistorianRecord#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      < 
init string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Executing bootstrap transaction 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1
submitTransaction object
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      > [object Object], {"$class":"org.hyperledger.composer.system.IssueIdentity","participant":"resource:org.hyperledger.composer.system.NetworkAdmin#admin","identityName":"admin","transactionId":"0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1","timestamp":"2017-12-05T17:01:02.206Z"}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from JSON 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from parsed JSON object 
constructor object
constructor object
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            > Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}, [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.IssueIdentity 
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsed transaction, resolving it Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                > Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property participant
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is a relationship, resolving Relationship {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property identityName
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring admin
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property transactionId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property timestamp
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring Tue Dec 05 2017 17:01:02 GMT+0000 (GMT)
resolveRelationship string
resolveRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    > Relationship {id=org.hyperledger.composer.system.NetworkAdmin#admin}, [object Object]
getRegistryForRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh > Relationship {id=org.hyperledger.composer.system.NetworkAdmin#admin}
getRegistryForRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh Got class declaration ClassDeclaration {id=org.hyperledger.composer.system.NetworkAdmin super=Participant enum=false abstract=false}
getRegistryForRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh Getting registry org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
getRegistryForRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh < [object Object]
resolveRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    Getting resource in registry admin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > admin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Participant:org.hyperledger.composer.system.NetworkAdmin 4admin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    Failed to resolve relationship [object Object]
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            > Relationship {id=org.hyperledger.composer.system.NetworkAdmin#admin}, [object Object]
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining identifier property participantId
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            < 
resolveRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    < Relationship {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                < Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                Calling handler 
issueIdentity object
issueIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :issueIdentity()          > [object Object], Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
getIdentityRegistry object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb, [object Object], undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 4ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :issueIdentity()          < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 1
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      > Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
findFunctionNames string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Looking at function declaration sampleTransaction
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function is annotated with @transaction 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function parameter type does not match transaction 
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                < 0
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting historian 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.HistorianRecord
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.IssueIdentity 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.IssueIdentity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing executed transaction in transaction registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Transaction:org.hyperledger.composer.system.IssueIdentity 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
createHistorianRecord object
createHistorianRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  > Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  created historian record 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  assuming admin userid again 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing historian record in the registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.HistorianRecord#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   Executing start business network transaction 
submitTransaction object
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      > [object Object], {"$class":"org.hyperledger.composer.system.StartBusinessNetwork","businessNetworkArchive":"","bootstrapTransactions":[{"$class":"org.hyperledger.composer.system.AddParticipant","resources":[{"$class":"org.hyperledger.composer.system.NetworkAdmin","participantId":"admin"}],"targetRegistry":"resource:org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin","transactionId":"0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0","timestamp":"2017-12-05T17:01:02.205Z"},{"$class":"org.hyperledger.composer.system.IssueIdentity","participant":"resource:org.hyperledger.composer.system.NetworkAdmin#admin","identityName":"admin","transactionId":"0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1","timestamp":"2017-12-05T17:01:02.206Z"}],"transactionId":"0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d","timestamp":"2017-12-05T17:01:02.207Z"}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from JSON 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from parsed JSON object 
constructor object
constructor object
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            > Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}, [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.StartBusinessNetwork 
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsed transaction, resolving it Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                > Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property businessNetworkArchive
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring 
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property logLevel
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property bootstrapTransactions
resolveResourceOrConcept number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is an array, iterating over values 2
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property transactionId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property timestamp
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring Tue Dec 05 2017 17:01:02 GMT+0000 (GMT)
resolveArray object
resolveArray object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           > Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0},Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}, [object Object]
resolveArray string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           Array item is a resource, resolving Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
resolveArray string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           Array item is a resource, resolving Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property resources
resolveResourceOrConcept number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is an array, iterating over values 1
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property targetRegistry
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is a relationship, resolving Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property transactionId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property timestamp
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring Tue Dec 05 2017 17:01:02 GMT+0000 (GMT)
resolveArray object
resolveArray object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           > Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, [object Object]
resolveArray string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           Array item is a resource, resolving Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property participantId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring admin
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveArray object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveRelationship string
resolveRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    > Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}, [object Object]
getRegistryForRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh > Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}
getRegistryForRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh Got class declaration ClassDeclaration {id=org.hyperledger.composer.system.ParticipantRegistry super=Registry enum=false abstract=false}
getRegistryForRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh Getting registry org.hyperledger.composer.system.ParticipantRegistry
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.ParticipantRegistry
getRegistryForRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :getRegistryForRelationsh < [object Object]
resolveRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    Getting resource in registry org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.ParticipantRegistry 4org.hyperledger.composer.system.NetworkAdmin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    Failed to resolve relationship [object Object]
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            > Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}, [object Object]
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining identifier property registryId
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining invalid property name
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining invalid property type
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            Defining invalid property system
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : InvalidRelationship     :constructor()            < 
resolveRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    < Relationship {id=org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property participant
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is a relationship, resolving Relationship {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property identityName
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring admin
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property transactionId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property timestamp
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring Tue Dec 05 2017 17:01:02 GMT+0000 (GMT)
resolveRelationship string
resolveRelationship object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    > Relationship {id=org.hyperledger.composer.system.NetworkAdmin#admin}, [object Object]
resolveRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    Target resource is already present in cache org.hyperledger.composer.system.NetworkAdmin#admin
resolveRelationship string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveRelationship()    < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
resolveArray object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveArray()           < Resource {id=org.hyperledger.composer.system.AddParticipant#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0},Resource {id=org.hyperledger.composer.system.IssueIdentity#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1}
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                < Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                Calling handler 
startBusinessNetwork object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :startBusinessNetwork()   > Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :startBusinessNetwork()   < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 1
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      > Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}
findFunctionNames string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Looking at function declaration sampleTransaction
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function is annotated with @transaction 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function parameter type does not match transaction 
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                < 0
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting historian 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.HistorianRecord
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.StartBusinessNetwork 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.StartBusinessNetwork
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing executed transaction in transaction registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Transaction:org.hyperledger.composer.system.StartBusinessNetwork 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
createHistorianRecord object
createHistorianRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  > Resource {id=org.hyperledger.composer.system.StartBusinessNetwork#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d}, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  created historian record 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  assuming admin userid again 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing historian record in the registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.HistorianRecord#0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0b4d6dba-303e-45ed-9aa2-b36fb1e12e3d, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     > 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4$sysdata  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysdata 4businessnetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysdata 4metanetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4$sysregistries  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.AssetRegistry  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.AssetRegistry  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.ParticipantRegistry  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.ParticipantRegistry  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.TransactionRegistry  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.TransactionRegistry  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Participant:org.hyperledger.composer.system.NetworkAdmin  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Participant:org.hyperledger.composer.system.NetworkAdmin  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.HistorianRecord  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.HistorianRecord  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.AddAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.AddAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.UpdateAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RemoveAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.RemoveAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.AddParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.AddParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.UpdateParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RemoveParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.RemoveParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.IssueIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.IssueIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.BindIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.BindIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.RevokeIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.RevokeIdentity  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.StartBusinessNetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.StartBusinessNetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.ResetBusinessNetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.ResetBusinessNetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.UpdateBusinessNetwork  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.SetLogLevel  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.SetLogLevel  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Asset:org.acme.sample.SampleAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.AssetRegistry 4org.acme.sample.SampleAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Asset:org.acme.sample.SampleAsset  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Participant:org.acme.sample.SampleParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.ParticipantRegistry 4org.acme.sample.SampleParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Participant:org.acme.sample.SampleParticipant  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$sysregistries 4Transaction:org.acme.sample.SampleTransaction  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.TransactionRegistry 4org.acme.sample.SampleTransaction  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54$syscollections 4Transaction:org.acme.sample.SampleTransaction  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Participant:org.hyperledger.composer.system.NetworkAdmin 4admin  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Transaction:org.hyperledger.composer.system.AddParticipant 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#0  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.Identity 4ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Transaction:org.hyperledger.composer.system.IssueIdentity 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d#1  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Transaction:org.hyperledger.composer.system.StartBusinessNetwork 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40b4d6dba-303e-45ed-9aa2-b36fb1e12e3d  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :init()                   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdCard                  :constructor()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdCard                  :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AdminConnection         :start()                  < 
getConnectionManagerByType string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ConnectionProfileManager:getConnectionManagerByTy Looking up a connection manager for type embedded
> Deployed network - now Connecting business network connection
connectWithCard################################## object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:connectWithCard######### > WIBBLE: no bnc
getConnectionManagerByType string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ConnectionProfileManager:getConnectionManagerByTy Looking up a connection manager for type embedded
constructor object
constructor boolean
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            > null, true, [object Object]
createPouchDB string
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          > Composer, [object Object]
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            < 
constructor object
constructor boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            > null, true
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:connectWithCard()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:_connectionLogin()       > 
ensureCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       > identities
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > identities
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4identities  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], identities
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
ensureCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > admin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54identities 4admin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
ensureCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       > identities
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > identities
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4identities  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], identities
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
ensureCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : DataService             :ensureCollection()       < [object Object]
add string
add object
add undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > admin, [object Object], undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54identities 4admin  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit enabled, executing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54identities 4admin  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
add string
add object
add undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918, [object Object], undefined
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54identities 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit enabled, executing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54identities 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:ping()                   > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:pingInner()              > 
constructor string
constructor undefined
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined, [object Object]
createPouchDB string
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          > Composer:537fc020-dc26-4ee7-9be1-87dad9ead539, [object Object]
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            < 
constructor string
constructor undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            < 
query object
query string
query object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  > [object Object], ping, 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  Initializing context 
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             > [object Object]
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin Business network definition not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysdata
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysdata  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysdata
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor Getting business network archive from the $sysdata collection 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > businessnetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4businessnetwork  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin > 
loadBusinessNetworkDefinition string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Looking in cache for business network f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Business network is in cache 
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got business network archive 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle Compiled script bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle > 
loadCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Looking in cache for compiled script bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Compiled script bundle is in cache 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled script bundle 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( Compiled query bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( > 
loadCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Looking in cache for compiled query bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Compiled query bundle is in cache 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled query bundle 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  Compiled ACL bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  > 
loadCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Looking in cache for compiled ACL bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Compiled ACL bundle is in cache 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled ACL bundle 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading sysregistries collection 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysregistries
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysregistries  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysregistries
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading current participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCurrentParticipant() > 
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.IssueIdentity, issueIdentity(api, transaction) {
        const method = 'issueIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Create the temporary identifier, which is hash(name, issuer)
                const sha256 = createHash('sha256');
                const issuer = this.identityService.getIssuer();
                sha256.update(transaction.identityName, 'utf8');
                sha256.update(issuer, 'utf8');
                const identifier = sha256.digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identifier);
                Object.assign(identity, {
                    name: transaction.identityName,
                    issuer,
                    certificate: '',
                    state: 'ISSUED',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.BindIdentity, bindIdentity(api, transaction) {
        const method = 'bindIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Parse the certificate into a byte array.
                const bytes = transaction.certificate
                    .replace(/-----BEGIN CERTIFICATE-----/, '')
                    .replace(/-----END CERTIFICATE-----/, '')
                    .replace(/[\r\n]+/g, '');
                const buffer = Buffer.from(bytes, 'base64');
                const sha256 = createHash('sha256');
                const identityId = sha256.update(buffer).digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identityId);
                Object.assign(identity, {
                    name: '',
                    issuer: '',
                    certificate: transaction.certificate,
                    state: 'BOUND',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.ActivateCurrentIdentity, activateCurrentIdentity(api, transaction) {
        const method = 'activateCurrentIdentity';
        LOG.entry(method, api, transaction);
        let identityRegistry;
        return this.getIdentityRegistry()
            .then((identityRegistry_) => {
                identityRegistry = identityRegistry_;
                return this.getIdentity();
            })
            .then((identity) => {

                // If the identity has been issued, we must delete it and then create a new one.
                if (identity.state === 'ISSUED') {
                    return this.activateIssuedIdentity(identityRegistry, identity);
                }

                // If the identity has been bound, then we can update it.
                if (identity.state === 'BOUND') {
                    return this.activateBoundIdentity(identityRegistry, identity);
                }

                // Shouldn't get here.
                throw new Error('The current identity cannot be activated because it is in an unknown state: ' + identity.state);

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RevokeIdentity, revokeIdentity(api, transaction) {
        const method = 'revokeIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Ensure the identity is not already revoked.
                if (transaction.identity.state === 'REVOKED') {
                    throw new Error('The specified identity has already been revoked');
                }

                // Revoke the identity and update it in the identity registry.
                Object.assign(transaction.identity, {
                    state: 'REVOKED'
                });
                return identityRegistry.update(transaction.identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.Identity, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.Identity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
getIdentityRegistry object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 4ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            < Resource {id=org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb}
validateIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       > Resource {id=org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       Error: The current identity must be activated (ACTIVATION_REQUIRED) 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  Caught error, rethrowing [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedEventService    :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedHTTPService     :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:ping()                   Activation required, activating ... 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:activate()               > 
constructor string
constructor undefined
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined, [object Object]
createPouchDB string
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          > Composer:537fc020-dc26-4ee7-9be1-87dad9ead539, [object Object]
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            < 
constructor string
constructor undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            < 
invoke object
invoke string
invoke object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :invoke()                 > [object Object], submitTransaction, {"$class":"org.hyperledger.composer.system.ActivateCurrentIdentity","transactionId":"0c616832-6ba3-4089-b7f2-82885eded164","timestamp":"2017-12-05T17:01:02.448Z"}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :invoke()                 Initializing context 
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             > [object Object]
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin Business network definition not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysdata
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysdata  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysdata
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor Getting business network archive from the $sysdata collection 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > businessnetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4businessnetwork  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin > 
loadBusinessNetworkDefinition string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Looking in cache for business network f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Business network is in cache 
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got business network archive 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle Compiled script bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle > 
loadCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Looking in cache for compiled script bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Compiled script bundle is in cache 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled script bundle 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( Compiled query bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( > 
loadCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Looking in cache for compiled query bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Compiled query bundle is in cache 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled query bundle 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  Compiled ACL bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  > 
loadCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Looking in cache for compiled ACL bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Compiled ACL bundle is in cache 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled ACL bundle 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading sysregistries collection 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysregistries
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysregistries  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysregistries
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading current participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCurrentParticipant() > 
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.IssueIdentity, issueIdentity(api, transaction) {
        const method = 'issueIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Create the temporary identifier, which is hash(name, issuer)
                const sha256 = createHash('sha256');
                const issuer = this.identityService.getIssuer();
                sha256.update(transaction.identityName, 'utf8');
                sha256.update(issuer, 'utf8');
                const identifier = sha256.digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identifier);
                Object.assign(identity, {
                    name: transaction.identityName,
                    issuer,
                    certificate: '',
                    state: 'ISSUED',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.BindIdentity, bindIdentity(api, transaction) {
        const method = 'bindIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Parse the certificate into a byte array.
                const bytes = transaction.certificate
                    .replace(/-----BEGIN CERTIFICATE-----/, '')
                    .replace(/-----END CERTIFICATE-----/, '')
                    .replace(/[\r\n]+/g, '');
                const buffer = Buffer.from(bytes, 'base64');
                const sha256 = createHash('sha256');
                const identityId = sha256.update(buffer).digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identityId);
                Object.assign(identity, {
                    name: '',
                    issuer: '',
                    certificate: transaction.certificate,
                    state: 'BOUND',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.ActivateCurrentIdentity, activateCurrentIdentity(api, transaction) {
        const method = 'activateCurrentIdentity';
        LOG.entry(method, api, transaction);
        let identityRegistry;
        return this.getIdentityRegistry()
            .then((identityRegistry_) => {
                identityRegistry = identityRegistry_;
                return this.getIdentity();
            })
            .then((identity) => {

                // If the identity has been issued, we must delete it and then create a new one.
                if (identity.state === 'ISSUED') {
                    return this.activateIssuedIdentity(identityRegistry, identity);
                }

                // If the identity has been bound, then we can update it.
                if (identity.state === 'BOUND') {
                    return this.activateBoundIdentity(identityRegistry, identity);
                }

                // Shouldn't get here.
                throw new Error('The current identity cannot be activated because it is in an unknown state: ' + identity.state);

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RevokeIdentity, revokeIdentity(api, transaction) {
        const method = 'revokeIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Ensure the identity is not already revoked.
                if (transaction.identity.state === 'REVOKED') {
                    throw new Error('The specified identity has already been revoked');
                }

                // Revoke the identity and update it in the identity registry.
                Object.assign(transaction.identity, {
                    state: 'REVOKED'
                });
                return identityRegistry.update(transaction.identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.Identity, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.Identity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
getIdentityRegistry object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 4ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            < Resource {id=org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb}
validateIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       > Resource {id=org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       Error: The current identity must be activated (ACTIVATION_REQUIRED) 
loadCurrentParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCurrentParticipant() < null
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Deploying or reinitializing, not setting current participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedEventService    :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedHTTPService     :constructor()            < 
transactionStart boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       > false
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       < 
invoke string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :invoke()                 Calling engine function submitTransaction
submitTransaction object
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      > [object Object], {"$class":"org.hyperledger.composer.system.ActivateCurrentIdentity","transactionId":"0c616832-6ba3-4089-b7f2-82885eded164","timestamp":"2017-12-05T17:01:02.448Z"}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from JSON 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsing transaction from parsed JSON object 
constructor object
constructor object
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            > Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}, [object Object], [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.ActivateCurrentIdentity 
submitTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Parsed transaction, resolving it Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :constructor()            < 
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                > Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
resolveResourceOrConcept string
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept > Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}, [object Object]
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property transactionId
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring 0c616832-6ba3-4089-b7f2-82885eded164
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Looking at property timestamp
resolveResourceOrConcept object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept Property value is neither a resource or a relationship, ignoring Tue Dec 05 2017 17:01:02 GMT+0000 (GMT)
resolveResourceOrConcept string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolveResourceOrConcept < Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
resolve string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Resolver                :resolve()                < Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Api                     :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Api                     :constructor()            < 
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :constructor()            > [object Object]
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.AddAsset, addResources(api, transaction) {
        const method = 'addResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.addAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RemoveAsset, removeResources(api, transaction) {
        const method = 'removeResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.removeAll(transaction.resourceIds);
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.UpdateAsset, updateResources(api, transaction) {
        const method = 'updateResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.updateAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.AddParticipant, addResources(api, transaction) {
        const method = 'addResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.addAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RemoveParticipant, removeResources(api, transaction) {
        const method = 'removeResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.removeAll(transaction.resourceIds);
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.UpdateParticipant, updateResources(api, transaction) {
        const method = 'updateResources';
        LOG.entry(method, transaction.registryType, transaction.registryId);
        const registryType = TYPE_MAP[transaction.targetRegistry.getType()];
        const registryId = transaction.targetRegistry.getIdentifier();
        return this.registryManager.get(registryType, registryId)
            .then(registry => {
                return registry.updateAll(transaction.resources,{ convertResourcesToRelationships: true });
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :<ResourceManager>()      Binding in the tx names and impl 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.StartBusinessNetwork, startBusinessNetwork(api, transaction) {
        const method = 'startBusinessNetwork';
        LOG.entry(method, transaction);
        LOG.exit(method);
        return Promise.resolve();
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.UpdateBusinessNetwork, updateBusinessNetwork(api, transaction) {
        const method = 'updateBusinessNetwork';
        LOG.entry(method, transaction);
        let dataService = this.context.getDataService();
        let businessNetworkBase64, businessNetworkHash, businessNetworkDefinition;
        let compiledScriptBundle, compiledQueryBundle, compiledAclBundle;
        let sysdata, resource;
        return dataService.getCollection('$sysdata')
            .then((result) => {
                sysdata = result;
                return sysdata.get('metanetwork');
            })
            .then((result) => {
                resource = this.context.getSerializer().fromJSON(result);
                return this.context.getAccessController().check(resource, 'UPDATE');
            })
            // return Promise.resolve()
            .then(() => {

                // Load, validate, and hash the business network definition.
                LOG.debug(method, 'Loading business network definition');
                businessNetworkBase64 = transaction.businessNetworkArchive;
                let businessNetworkArchive = Buffer.from(businessNetworkBase64, 'base64');
                let sha256 = createHash('sha256');
                businessNetworkHash = sha256.update(businessNetworkBase64, 'utf8').digest('hex');
                LOG.debug(method, 'Calculated business network definition hash', businessNetworkHash);
                return BusinessNetworkDefinition.fromArchive(businessNetworkArchive);

            })
            .then((businessNetworkDefinition_) => {

                // // Cache the business network.
                businessNetworkDefinition = businessNetworkDefinition_;
                LOG.debug(method, 'Loaded business network definition, storing in cache');
                Context.cacheBusinessNetwork(businessNetworkHash, businessNetworkDefinition);

                // Cache the compiled script bundle.
                compiledScriptBundle = this.context.getScriptCompiler().compile(businessNetworkDefinition.getScriptManager());
                LOG.debug(method, 'Loaded compiled script bundle, storing in cache');
                Context.cacheCompiledScriptBundle(businessNetworkHash, compiledScriptBundle);

                // Cache the compiled query bundle.
                compiledQueryBundle = this.context.getQueryCompiler().compile(businessNetworkDefinition.getQueryManager());
                LOG.debug(method, 'Loaded compiled query bundle, storing in cache');
                Context.cacheCompiledQueryBundle(businessNetworkHash, compiledQueryBundle);

                // Cache the compiled ACL bundle.
                compiledAclBundle = this.context.getAclCompiler().compile(businessNetworkDefinition.getAclManager(), businessNetworkDefinition.getScriptManager());
                LOG.debug(method, 'Loaded compiled ACL bundle, storing in cache');
                Context.cacheCompiledAclBundle(businessNetworkHash, compiledAclBundle);

                // Get the sysdata collection where the business network definition is stored.
                LOG.debug(method, 'Loaded business network definition, storing in $sysdata collection');

                // Update the business network definition in the sysdata collection.
                return sysdata.update('businessnetwork', {
                    data: businessNetworkBase64,
                    hash: businessNetworkHash
                });

            })
            .then(() => {

                // Reinitialize the context to reload the business network.
                LOG.debug(method, 'Reinitializing context');
                return this.context.initialize({
                    businessNetworkDefinition: businessNetworkDefinition,
                    compiledScriptBundle: compiledScriptBundle,
                    compiledQueryBundle: compiledQueryBundle,
                    compiledAclBundle: compiledAclBundle,
                    reinitialize: true
                });

            })
            .then(() => {

                // Create all other default registries.
                LOG.debug(method, 'Creating default registries');
                let registryManager = this.context.getRegistryManager();
                return registryManager.createDefaults();

            })
            .then(() => {
                LOG.exit(method);
            });

    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.ResetBusinessNetwork, resetBusinessNetwork(api, transaction) {
        const method = 'resetBusinessNetwork';
        LOG.entry(method, transaction);
        let dataService = this.context.getDataService();

        let sysdata, resource;
        return dataService.getCollection('$sysdata')
            .then((result) => {
                sysdata = result;
                return sysdata.get('metanetwork');
            })
            .then((result) => {
                resource = this.context.getSerializer().fromJSON(result);
                return this.context.getAccessController().check(resource, 'UPDATE');
            })
            .then( ()=>{
                return this._resetRegistries( 'Asset');
            })
            .then(() => {
                return this._resetRegistries( 'Participant');
            })
            .then(() => {
                return this._resetRegistries( 'Transaction');
            })
            .then ( ()=> {
                // force creation of defaults as we know the don't exist
                // Create all other default registries.
                LOG.debug(method, 'Creating default registries');
                let registryManager = this.context.getRegistryManager();
                return registryManager.createDefaults(true);
            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.SetLogLevel, setLogLevel(api, transaction) {
        const method = 'setLogLevel';
        LOG.entry(method, transaction);
        let dataService = this.context.getDataService();
        let sysdata, resource;
        return dataService.getCollection('$sysdata')
            .then((result) => {
                sysdata = result;
                return sysdata.get('metanetwork');
            })
            .then((result) => {
                resource = this.context.getSerializer().fromJSON(result);
                return this.context.getAccessController().check(resource, 'UPDATE');
            })
            .then(() => {
                return this.context.getLoggingService().setLogLevel(transaction.newLogLevel);
            });


    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                Calling handler 
activateCurrentIdentity object
activateCurrentIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :activateCurrentIdentity( > [object Object], Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.Identity, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.Identity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
getIdentityRegistry object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.Identity, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.Identity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
getIdentityRegistry object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 4ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            < Resource {id=org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb}
activateIssuedIdentity object
activateIssuedIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :activateIssuedIdentity() > [object Object], Resource {id=org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb}
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb, DELETE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
remove string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :remove()                 > ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 4ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.removeDocument(this.db, key);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceRemoved object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceRemoved()      > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceRemoved()      < 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :activateIssuedIdentity() < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :activateCurrentIdentity( < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 1
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :execute()                < 0
execute object
execute object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                > [object Object], Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      > Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}
findFunctionNames string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Looking at function declaration sampleTransaction
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function is annotated with @transaction 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      Function parameter type does not match transaction 
findFunctionNames object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :findFunctionNames()      < 
execute number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : CompiledScriptBundle    :execute()                < 0
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting historian 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.HistorianRecord
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.HistorianRecord
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.HistorianRecord  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.HistorianRecord, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Asset:org.hyperledger.composer.system.HistorianRecord
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.HistorianRecord  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.HistorianRecord
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Getting default transaction registry for org.hyperledger.composer.system.ActivateCurrentIdentity 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.TransactionRegistry#org.hyperledger.composer.system.ActivateCurrentIdentity, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing executed transaction in transaction registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0c616832-6ba3-4089-b7f2-82885eded164, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity 40c616832-6ba3-4089-b7f2-82885eded164  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
createHistorianRecord object
createHistorianRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  > Resource {id=org.hyperledger.composer.system.ActivateCurrentIdentity#0c616832-6ba3-4089-b7f2-82885eded164}, [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :createHistorianRecord()  created historian record 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      Storing historian record in the registry 
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.HistorianRecord#0c616832-6ba3-4089-b7f2-82885eded164, CREATE
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
add string
add object
add boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :add()                    > 0c616832-6ba3-4089-b7f2-82885eded164, [object Object], false
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40c616832-6ba3-4089-b7f2-82885eded164  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < 
handleAction function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           > () => {
                    return PouchDBUtils.putDocument(this.db, key, object);
                }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           Autocommit disabled, queueing action 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :handleAction()           < 
onResourceAdded object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionLogger       :onResourceAdded()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineTransactions      :submitTransaction()      < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     > 
remove string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :remove()                 > 54Asset:org.hyperledger.composer.system.Identity 4ddae16d6f23947e9349627051b8ca5933cef53d2918f52295352d7dd24cdabcb  
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :remove()                 < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.Identity 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Transaction:org.hyperledger.composer.system.ActivateCurrentIdentity 40c616832-6ba3-4089-b7f2-82885eded164  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
put string
put object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    > 54Asset:org.hyperledger.composer.system.HistorianRecord 40c616832-6ba3-4089-b7f2-82885eded164  , [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :put()                    < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :invoke()                 < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:activate()               < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:pingInner()              > 
constructor string
constructor undefined
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined, [object Object]
createPouchDB string
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          > Composer:537fc020-dc26-4ee7-9be1-87dad9ead539, [object Object]
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            < 
constructor string
constructor undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            < 
query object
query string
query object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  > [object Object], ping, 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  Initializing context 
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             > [object Object]
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin Business network definition not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysdata
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysdata  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysdata
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor Getting business network archive from the $sysdata collection 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > businessnetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4businessnetwork  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin > 
loadBusinessNetworkDefinition string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Looking in cache for business network f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Business network is in cache 
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got business network archive 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle Compiled script bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle > 
loadCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Looking in cache for compiled script bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Compiled script bundle is in cache 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled script bundle 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( Compiled query bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( > 
loadCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Looking in cache for compiled query bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Compiled query bundle is in cache 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled query bundle 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  Compiled ACL bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  > 
loadCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Looking in cache for compiled ACL bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Compiled ACL bundle is in cache 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled ACL bundle 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading sysregistries collection 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysregistries
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysregistries  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysregistries
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading current participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCurrentParticipant() > 
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.IssueIdentity, issueIdentity(api, transaction) {
        const method = 'issueIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Create the temporary identifier, which is hash(name, issuer)
                const sha256 = createHash('sha256');
                const issuer = this.identityService.getIssuer();
                sha256.update(transaction.identityName, 'utf8');
                sha256.update(issuer, 'utf8');
                const identifier = sha256.digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identifier);
                Object.assign(identity, {
                    name: transaction.identityName,
                    issuer,
                    certificate: '',
                    state: 'ISSUED',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.BindIdentity, bindIdentity(api, transaction) {
        const method = 'bindIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Parse the certificate into a byte array.
                const bytes = transaction.certificate
                    .replace(/-----BEGIN CERTIFICATE-----/, '')
                    .replace(/-----END CERTIFICATE-----/, '')
                    .replace(/[\r\n]+/g, '');
                const buffer = Buffer.from(bytes, 'base64');
                const sha256 = createHash('sha256');
                const identityId = sha256.update(buffer).digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identityId);
                Object.assign(identity, {
                    name: '',
                    issuer: '',
                    certificate: transaction.certificate,
                    state: 'BOUND',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.ActivateCurrentIdentity, activateCurrentIdentity(api, transaction) {
        const method = 'activateCurrentIdentity';
        LOG.entry(method, api, transaction);
        let identityRegistry;
        return this.getIdentityRegistry()
            .then((identityRegistry_) => {
                identityRegistry = identityRegistry_;
                return this.getIdentity();
            })
            .then((identity) => {

                // If the identity has been issued, we must delete it and then create a new one.
                if (identity.state === 'ISSUED') {
                    return this.activateIssuedIdentity(identityRegistry, identity);
                }

                // If the identity has been bound, then we can update it.
                if (identity.state === 'BOUND') {
                    return this.activateBoundIdentity(identityRegistry, identity);
                }

                // Shouldn't get here.
                throw new Error('The current identity cannot be activated because it is in an unknown state: ' + identity.state);

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RevokeIdentity, revokeIdentity(api, transaction) {
        const method = 'revokeIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Ensure the identity is not already revoked.
                if (transaction.identity.state === 'REVOKED') {
                    throw new Error('The specified identity has already been revoked');
                }

                // Revoke the identity and update it in the identity registry.
                Object.assign(transaction.identity, {
                    state: 'REVOKED'
                });
                return identityRegistry.update(transaction.identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.Identity, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.Identity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
getIdentityRegistry object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            < Resource {id=org.hyperledger.composer.system.Identity#8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918}
validateIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       > Resource {id=org.hyperledger.composer.system.Identity#8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getParticipant()         > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Participant:org.hyperledger.composer.system.NetworkAdmin  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Participant:org.hyperledger.composer.system.NetworkAdmin  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Participant:org.hyperledger.composer.system.NetworkAdmin
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > admin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Participant:org.hyperledger.composer.system.NetworkAdmin 4admin  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.NetworkAdmin#admin, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getParticipant()         < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
loadCurrentParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCurrentParticipant() < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Setting current participant Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedEventService    :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedHTTPService     :constructor()            < 
transactionStart boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       > true
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       < 
query string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  Calling engine function ping
ping object
ping object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :ping()                   > [object Object], 
ping object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :ping()                   < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
query object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  < [object Object]
pingInner object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:pingInner()              < [object Object]
ping object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:ping()                   < [object Object]
constructor string
constructor undefined
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined, [object Object]
createPouchDB string
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          > Composer:537fc020-dc26-4ee7-9be1-87dad9ead539, [object Object]
createPouchDB object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :createPouchDB()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :constructor()            < 
constructor string
constructor undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            > 537fc020-dc26-4ee7-9be1-87dad9ead539, undefined
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedDataService     :constructor()            < 
query object
query string
query object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  > [object Object], getBusinessNetwork, 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  Initializing context 
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             > [object Object]
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin Business network definition not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysdata
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysdata  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysdata
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor Getting business network archive from the $sysdata collection 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > businessnetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4businessnetwork  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin > 
loadBusinessNetworkDefinition string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Looking in cache for business network f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkDefin Business network is in cache 
findBusinessNetworkDefinition object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findBusinessNetworkDefin < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got business network archive 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle Compiled script bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle > 
loadCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Looking in cache for compiled script bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledScriptB < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledScriptBundle Compiled script bundle is in cache 
findCompiledScriptBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledScriptBundle < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled script bundle 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( Compiled query bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( > 
loadCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Looking in cache for compiled query bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledQueryBu < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledQueryBundle( Compiled query bundle is in cache 
findCompiledQueryBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledQueryBundle( < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled query bundle 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  Compiled ACL bundle not specified, loading from world state 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor > 
loadBusinessNetworkRecord object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadBusinessNetworkRecor < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  > 
loadCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Looking in cache for compiled ACL bundle f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund > f4a900865304c584be510825dd383d6c8caa29568e78ca5bf608dc2052f6795e
getCachedCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :getCachedCompiledAclBund < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCompiledAclBundle()  Compiled ACL bundle is in cache 
findCompiledAclBundle object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :findCompiledAclBundle()  < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Got compiled ACL bundle 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading sysregistries collection 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysregistries
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysregistries  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysregistries
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Loading current participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCurrentParticipant() > 
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            > [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :constructor()            < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.IssueIdentity, issueIdentity(api, transaction) {
        const method = 'issueIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Create the temporary identifier, which is hash(name, issuer)
                const sha256 = createHash('sha256');
                const issuer = this.identityService.getIssuer();
                sha256.update(transaction.identityName, 'utf8');
                sha256.update(issuer, 'utf8');
                const identifier = sha256.digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identifier);
                Object.assign(identity, {
                    name: transaction.identityName,
                    issuer,
                    certificate: '',
                    state: 'ISSUED',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.BindIdentity, bindIdentity(api, transaction) {
        const method = 'bindIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Parse the certificate into a byte array.
                const bytes = transaction.certificate
                    .replace(/-----BEGIN CERTIFICATE-----/, '')
                    .replace(/-----END CERTIFICATE-----/, '')
                    .replace(/[\r\n]+/g, '');
                const buffer = Buffer.from(bytes, 'base64');
                const sha256 = createHash('sha256');
                const identityId = sha256.update(buffer).digest('hex');

                // Create the new identity and add it to the identity registry.
                const identity = this.factory.newResource('org.hyperledger.composer.system', 'Identity', identityId);
                Object.assign(identity, {
                    name: '',
                    issuer: '',
                    certificate: transaction.certificate,
                    state: 'BOUND',
                    participant: transaction.participant
                });
                return identityRegistry.add(identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.ActivateCurrentIdentity, activateCurrentIdentity(api, transaction) {
        const method = 'activateCurrentIdentity';
        LOG.entry(method, api, transaction);
        let identityRegistry;
        return this.getIdentityRegistry()
            .then((identityRegistry_) => {
                identityRegistry = identityRegistry_;
                return this.getIdentity();
            })
            .then((identity) => {

                // If the identity has been issued, we must delete it and then create a new one.
                if (identity.state === 'ISSUED') {
                    return this.activateIssuedIdentity(identityRegistry, identity);
                }

                // If the identity has been bound, then we can update it.
                if (identity.state === 'BOUND') {
                    return this.activateBoundIdentity(identityRegistry, identity);
                }

                // Shouldn't get here.
                throw new Error('The current identity cannot be activated because it is in an unknown state: ' + identity.state);

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
bind string
bind function
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   > org.hyperledger.composer.system.RevokeIdentity, revokeIdentity(api, transaction) {
        const method = 'revokeIdentity';
        LOG.entry(method, api, transaction);
        return this.getIdentityRegistry()
            .then((identityRegistry) => {

                // Ensure the identity is not already revoked.
                if (transaction.identity.state === 'REVOKED') {
                    throw new Error('The specified identity has already been revoked');
                }

                // Revoke the identity and update it in the identity registry.
                Object.assign(transaction.identity, {
                    state: 'REVOKED'
                });
                return identityRegistry.update(transaction.identity, { convertResourcesToRelationships: true });

            })
            .then(() => {
                LOG.exit(method);
            });
    }
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   Creating new handlers array 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : TransactionHandler      :bind()                   < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.AssetRegistry#org.hyperledger.composer.system.Identity, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Asset:org.hyperledger.composer.system.Identity
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Asset:org.hyperledger.composer.system.Identity  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Asset:org.hyperledger.composer.system.Identity
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
getIdentityRegistry object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentityRegistry()    < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Asset:org.hyperledger.composer.system.Identity 48c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Identity#8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getIdentity()            < Resource {id=org.hyperledger.composer.system.Identity#8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918}
validateIdentity object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       > Resource {id=org.hyperledger.composer.system.Identity#8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :validateIdentity()       < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getParticipant()         > 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : RegistryManager         :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysregistries 4Participant:org.hyperledger.composer.system.NetworkAdmin  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.ParticipantRegistry#org.hyperledger.composer.system.NetworkAdmin, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > Participant:org.hyperledger.composer.system.NetworkAdmin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4Participant:org.hyperledger.composer.system.NetworkAdmin  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], Participant:org.hyperledger.composer.system.NetworkAdmin
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > admin
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54Participant:org.hyperledger.composer.system.NetworkAdmin 4admin  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.NetworkAdmin#admin, READ
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  No participant 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
getParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : IdentityManager         :getParticipant()         < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
loadCurrentParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :loadCurrentParticipant() < Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
initialize object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             Setting current participant Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Context                 :initialize()             < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedEventService    :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EmbeddedHTTPService     :constructor()            < 
transactionStart boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       > true
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionStart()       < 
query string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  Calling engine function getBusinessNetwork
getBusinessNetwork object
getBusinessNetwork object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineBusinessNetworks  :getBusinessNetwork()     > [object Object], 
getCollection string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          > $sysdata
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$syscollections 4$sysdata  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
constructor object
constructor object
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            > [object Object], [object Object], $sysdata
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :constructor()            < 
getCollection object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :getCollection()          < [object Object]
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > metanetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4metanetwork  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
check string
check string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  > org.hyperledger.composer.system.Network#basic-sample-network@0.1.5, READ
matchRule object
matchRule string
matchRule object
matchRule object
matchRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, READ, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchVerb string
matchVerb object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              > READ, [object Object]
matchVerb boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              < true
matchNoun string
matchNoun object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              > org.hyperledger.composer.system.Network#basic-sample-network@0.1.5, [object Object]
matchNoun boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              < false
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              Noun does not match 
matchRule boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              < false
matchRule object
matchRule string
matchRule object
matchRule object
matchRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, READ, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchVerb string
matchVerb object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              > READ, [object Object]
matchVerb boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              < false
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              Verb does not match 
matchRule boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              < false
matchRule object
matchRule string
matchRule object
matchRule object
matchRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, READ, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchVerb string
matchVerb object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              > READ, [object Object]
matchVerb boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              < true
matchNoun string
matchNoun object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              > org.hyperledger.composer.system.Network#basic-sample-network@0.1.5, [object Object]
matchNoun boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              < false
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              Noun does not match 
matchRule boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              < false
matchRule object
matchRule string
matchRule object
matchRule object
matchRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, READ, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchVerb string
matchVerb object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              > READ, [object Object]
matchVerb boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              < true
matchNoun string
matchNoun object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              > org.hyperledger.composer.system.Network#basic-sample-network@0.1.5, [object Object]
matchNoun boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              < true
matchParticipant string
matchParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchParticipant()       > org.hyperledger.composer.system.NetworkAdmin#admin, [object Object]
matchParticipant boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchParticipant()       < true
matchTransaction object
matchTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchTransaction()       > null, [object Object]
matchTransaction boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchTransaction()       < true
matchRule boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              < true
matchRule object
matchRule string
matchRule object
matchRule object
matchRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, READ, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchVerb string
matchVerb object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              > READ, [object Object]
matchVerb boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              < true
matchNoun string
matchNoun object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              > org.hyperledger.composer.system.Network#basic-sample-network@0.1.5, [object Object]
matchNoun boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              < true
matchParticipant string
matchParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchParticipant()       > org.hyperledger.composer.system.NetworkAdmin#admin, [object Object]
matchParticipant boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchParticipant()       < true
matchTransaction object
matchTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchTransaction()       > null, [object Object]
matchTransaction boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchTransaction()       < true
matchRule boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              < true
matchRule object
matchRule string
matchRule object
matchRule object
matchRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, READ, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchVerb string
matchVerb object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              > READ, [object Object]
matchVerb boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchVerb()              < true
matchNoun string
matchNoun object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              > org.hyperledger.composer.system.Network#basic-sample-network@0.1.5, [object Object]
matchNoun boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchNoun()              < true
matchParticipant string
matchParticipant object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchParticipant()       > org.hyperledger.composer.system.NetworkAdmin#admin, [object Object]
matchParticipant boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchParticipant()       < true
matchTransaction object
matchTransaction object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchTransaction()       > null, [object Object]
matchTransaction boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchTransaction()       < true
matchRule boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchRule()              < true
check object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  Processing rule [object Object]
checkRule object
checkRule string
checkRule object
checkRule object
checkRule object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :checkRule()              > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, READ, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchPredicate object
matchPredicate object
matchPredicate object
matchPredicate object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchPredicate()         > Resource {id=org.hyperledger.composer.system.Network#basic-sample-network@0.1.5}, Resource {id=org.hyperledger.composer.system.NetworkAdmin#admin}, null, [object Object]
matchPredicate boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :matchPredicate()         < true
check object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  Processed rule [object Promise]
checkRule boolean
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :checkRule()              < true
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : AccessController        :check()                  < 
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    > businessnetwork
get string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    > 54$sysdata 4businessnetwork  
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBUtils            :get()                    < [object Object]
get object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataCollection   :get()                    < [object Object]
getBusinessNetwork object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EngineBusinessNetworks  :getBusinessNetwork()     < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : PouchDBDataService      :transactionPrepare()     < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              > 
getEvents object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : EventService            :getEvents()              < 
query object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : Engine                  :query()                  < [object Object]
fromArchive number
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            > 7539
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading README.md 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading package.json 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Looking for model files 
fromArchive string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Found model file, loading it models/sample.cto
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Looking for JavaScript files 
fromArchive string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Found JavaScript file, loading it lib/sample.js
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading permissions.acl 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loading query queries.qry 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded README.md 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded package.json 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded model file 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded JavaScript file 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded permissions.acl 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded package.json 
constructor object
constructor object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:constructor()            > null, null
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:constructor()            Using package.json{"engines":{"composer":"^0.11.0"},"name":"basic-sample-network","version":"0.1.5","description":"The Hello World of Hyperledger Composer samples","networkImage":"https://hyperledger.github.io/composer-sample-networks/packages/basic-sample-network/networkimage.svg","networkImageanimated":"https://hyperledger.github.io/composer-sample-networks/packages/basic-sample-network/networkimageanimated.svg","scripts":{"prepublish":"mkdirp ./dist && composer archive create --sourceType dir --sourceName . -a ./dist/basic-sample-network.bna","pretest":"npm run lint","lint":"eslint .","postlint":"npm run licchk","licchk":"license-check","postlicchk":"npm run doc","doc":"jsdoc --pedantic --recurse -c jsdoc.json","test-inner":"mocha -t 0 --recursive && cucumber-js","test-cover":"nyc npm run test-inner","test":"npm run test-inner"},"repository":{"type":"git","url":"https://github.com/hyperledger/composer-sample-networks.git"},"keywords":["sample","composer","composer-network"],"author":"Hyperledger Composer","license":"Apache-2.0","devDependencies":{"browserfs":"^1.2.0","chai":"^3.5.0","chai-as-promised":"^6.0.0","composer-admin":"^0.9.0","composer-cli":"^0.9.0","composer-client":"^0.9.0","composer-connector-embedded":"^0.9.0","composer-cucumber-steps":"^0.9.0","cucumber":"^2.2.0","eslint":"^3.6.1","istanbul":"^0.4.5","jsdoc":"^3.4.1","license-check":"^1.1.5","mkdirp":"^0.5.1","mocha":"^3.2.0","moment":"^2.17.1","nyc":"^11.0.2"},"license-check-config":{"src":["**/*.js","!./coverage/**/*","!./node_modules/**/*","!./out/**/*","!./scripts/**/*"],"path":"header.txt","blocking":true,"logInfo":false,"logError":true},"nyc":{"exclude":["coverage/**","features/**","out/**","test/**"],"reporter":["text-summary","html"],"all":true,"check-coverage":true,"statements":100,"branches":100,"functions":100,"lines":100}} 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :constructor()            > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addSystemModels()        > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addSystemModels()        [object Object] 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addSystemModels()        < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :constructor()            < 
constructor string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkMetadata :constructor()            > # Basic Sample Business Network

> This is the "Hello World" of Hyperledger Composer samples, which demonstrates the core functionality of Hyperledger Composer by changing the value of an asset.

This business network defines:

**Participant**
`SampleParticipant`

**Asset**
`SampleAsset`

**Transaction**
`SampleTransaction`

**Event**
`SampleEvent`

SampleAssets are owned by a SampleParticipant, and the value property on a SampleAsset can be modified by submitting a SampleTransaction. The SampleTransaction emits a SampleEvent that notifies applications of the old and new values for each modified SampleAsset.

To test this Business Network Definition in the **Test** tab:

Create a `SampleParticipant` participant:

```
{
  "$class": "org.acme.sample.SampleParticipant",
  "participantId": "Toby",
  "firstName": "Tobias",
  "lastName": "Hunter"
}
```

Create a `SampleAsset` asset:

```
{
  "$class": "org.acme.sample.SampleAsset",
  "assetId": "assetId:1",
  "owner": "resource:org.acme.sample.SampleParticipant#Toby",
  "value": "original value"
}
```

Submit a `SampleTransaction` transaction:

```
{
  "$class": "org.acme.sample.SampleTransaction",
  "asset": "resource:org.acme.sample.SampleAsset#assetId:1",
  "newValue": "new value"
}
```

After submitting this transaction, you should now see the transaction in the Transaction Registry and that a `SampleEvent` has been emitted. As a result, the value of the `assetId:1` should now be `new value` in the Asset Registry.

Congratulations!

Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkMetadata :constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:constructor()            < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Loaded all model, JavaScript, ACL files and Query files 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding model files to model manager 
addModelFiles string
addModelFiles object
addModelFiles object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addModelFiles()          > addModelFiles, /**
 * Sample business network definition.
 */
namespace org.acme.sample

asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}
, models/sample.cto
addModelFiles object
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : ModelManager            :addModelFiles()          < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added model files to model manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding JavaScript files to script manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added JavaScript files to script manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding ACL files to ACL manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added ACL files to ACL manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Adding Query files to query manager 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            Added Query files to query manager 
fromArchive string
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkDefinitio:fromArchive()            < [object Object]
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:_connectionLogin()       < 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:disconnect()             > 
Tue, 05 Dec 2017 17:01:02 GMT composer:runtime:embedded @JS : BusinessNetworkConnectio:disconnect()             < 
